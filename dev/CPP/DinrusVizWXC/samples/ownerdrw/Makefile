# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================




prefix = /usr/local
exec_prefix = ${prefix}
datarootdir = @datarootdir@
INSTALL = /usr/bin/install -c
EXEEXT = .exe
WINDRES = windres
REZ = 
SETFILE = 
NM = nm
BK_DEPS = /d/dinrus/dinrus32/dev/dinrus/DinrusWX/DinrusWX_28/wxWidgets-2.8.12/bk-deps
srcdir = .
top_srcdir = ../..
LIBS = -lz -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -lctl3d32 -ladvapi32 -lwsock32 -lgdi32
LDFLAGS_GUI = -mwindows
CXX = g++
CXXFLAGS = -DWX_PRECOMP -mthreads -Wall -Wundef -Wno-ctor-dtor-privacy -O2 -fno-strict-aliasing
CPPFLAGS = -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -I${wx_top_builddir}/lib/wx/include/msw-ansi-release-2.8 -I${top_srcdir}/include
LDFLAGS =  -mthreads 
WX_LIB_FLAVOUR = 
TOOLKIT = MSW
TOOLKIT_LOWERCASE = msw
TOOLKIT_VERSION = 
TOOLCHAIN_FULLNAME = msw-ansi-release-2.8
EXTRALIBS =  -mthreads  -lz -lrpcrt4 -loleaut32 -lole32 -luuid -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -lctl3d32 -ladvapi32 -lwsock32 -lgdi32 
EXTRALIBS_GUI = -lpng -lz -ljpeg -ltiff
HOST_SUFFIX = 
SAMPLES_RPATH_FLAG = 
SAMPLES_RPATH_POSTLINK = 
wx_top_builddir = /d/dinrus/dinrus32/dev/dinrus/DinrusWX/DinrusWX_28/wxWidgets-2.8.12

### Variables: ###

DESTDIR = 
WX_RELEASE = 2.8
WX_VERSION = $(WX_RELEASE).12
LIBDIRNAME = $(wx_top_builddir)/lib
OWNERDRW_CXXFLAGS = -D__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) \
	$(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) \
	-I$(srcdir) $(__DLLFLAG_p) -I$(srcdir)/../../samples $(CPPFLAGS) $(CXXFLAGS)
OWNERDRW_OBJECTS =  \
	$(__ownerdrw_os2_lib_res) \
	ownerdrw_ownerdrw.o \
	$(__ownerdrw___win32rc)

### Conditionally set variables: ###

#CXXC = $(CXX)
CXXC = $(BK_DEPS) $(CXX)
#PORTNAME = base
PORTNAME = $(TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
#WXBASEPORT = _carbon
#WXDEBUGFLAG = d
#WXDEBUGFLAG = d
#WXUNICODEFLAG = u
#WXUNIVNAME = univ
EXTRALIBS_FOR_BASE = $(EXTRALIBS)
#EXTRALIBS_FOR_BASE = $(EXTRALIBS) $(EXTRALIBS_GUI)
EXTRALIBS_FOR_GUI = $(EXTRALIBS_GUI)
#EXTRALIBS_FOR_GUI = 
__ownerdrw___mac_setfilecmd = @true
#__ownerdrw___mac_setfilecmd = \
#	$(SETFILE) -a C ownerdrw$(EXEEXT)
#__ownerdrw___mac_rezcmd = $(__MACOSX_RESOURCES_p_1)
#__WXUNIV_DEFINE_p = -D__WXUNIVERSAL__
#__WXUNIV_DEFINE_p_1 = -d __WXUNIVERSAL__
#__WXUNIV_DEFINE_p_2 = --define __WXUNIVERSAL__
#__EXCEPTIONS_DEFINE_p = -DwxNO_EXCEPTIONS
#__EXCEPTIONS_DEFINE_p_1 = -d wxNO_EXCEPTIONS
#__EXCEPTIONS_DEFINE_p_2 = --define wxNO_EXCEPTIONS
#__RTTI_DEFINE_p = -DwxNO_RTTI
#__RTTI_DEFINE_p_1 = -d wxNO_RTTI
#__RTTI_DEFINE_p_2 = --define wxNO_RTTI
#__THREAD_DEFINE_p = -DwxNO_THREADS
#__THREAD_DEFINE_p_1 = -d wxNO_THREADS
#__THREAD_DEFINE_p_2 = --define wxNO_THREADS
__DLLFLAG_p = -DWXUSINGDLL
__DLLFLAG_p_1 = -d WXUSINGDLL
__DLLFLAG_p_2 = --define WXUSINGDLL
COND_PLATFORM_OS2_1___ownerdrw___os2_emxbindcmd = $(NM) ownerdrw$(EXEEXT) | if \
	grep -q pmwin.763 ; then emxbind -ep ownerdrw$(EXEEXT) ; fi
#__ownerdrw___os2_emxbindcmd = $(COND_PLATFORM_OS2_1___ownerdrw___os2_emxbindcmd)
__RCDEFDIR_p = -i \
	$(LIBDIRNAME)/wx/include/$(TOOLCHAIN_FULLNAME)
__RCDEFDIR_p_1 = --include-dir \
	$(LIBDIRNAME)/wx/include/$(TOOLCHAIN_FULLNAME)
#__ownerdrw_os2_lib_res = \
#	$(top_srcdir)/include/wx/os2/wx.res
#__ownerdrw_app_Contents_PkgInfo___depname \
#	= ownerdrw.app/Contents/PkgInfo
#__ownerdrw_bundle___depname = ownerdrw_bundle
#____ownerdrw_BUNDLE_TGT_REF_DEP = \
#	$(__ownerdrw_app_Contents_PkgInfo___depname)
#____ownerdrw_BUNDLE_TGT_REF_DEP = \
#	$(__ownerdrw_app_Contents_PkgInfo___depname)
COND_MONOLITHIC_0___WXLIB_CORE_p = \
	-lwx_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core-$(WX_RELEASE)$(HOST_SUFFIX)
__WXLIB_CORE_p = $(COND_MONOLITHIC_0___WXLIB_CORE_p)
COND_MONOLITHIC_0___WXLIB_BASE_p = \
	-lwx_base$(WXBASEPORT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
__WXLIB_BASE_p = $(COND_MONOLITHIC_0___WXLIB_BASE_p)
__ownerdrw___win32rc = ownerdrw_ownerdrw_rc.o
COND_MONOLITHIC_1___WXLIB_MONO_p = \
	-lwx_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
#__WXLIB_MONO_p = $(COND_MONOLITHIC_1___WXLIB_MONO_p)
#__LIB_TIFF_p \
#	= \
#	-lwxtiff$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
#__LIB_JPEG_p \
#	= \
#	-lwxjpeg$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
#__LIB_PNG_p \
#	= \
#	-lwxpng$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
#__LIB_ZLIB_p = \
#	-lwxzlib$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
#__LIB_ODBC_p = \
#	-lwxodbc$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
COND_wxUSE_REGEX_builtin___LIB_REGEX_p = \
	-lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
__LIB_REGEX_p = $(COND_wxUSE_REGEX_builtin___LIB_REGEX_p)
#__LIB_EXPAT_p = \
#	-lwxexpat$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)-$(WX_RELEASE)$(HOST_SUFFIX)
COND_TOOLKIT_MAC___MACOSX_RESOURCES_p_1 = $(REZ) -d __DARWIN__ -t APPL -d \
	__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) \
	$(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) -i $(srcdir) $(__DLLFLAG_p_1) -i \
	$(srcdir)/../../samples $(__RCDEFDIR_p) -i $(top_srcdir)/include -o \
	ownerdrw$(EXEEXT) Carbon.r sample.r
#__MACOSX_RESOURCES_p_1 = $(COND_TOOLKIT_MAC___MACOSX_RESOURCES_p_1)

### Targets: ###

all: ownerdrw$(EXEEXT) $(__ownerdrw_bundle___depname) data

install: 

uninstall: 

install-strip: install

clean: 
	rm -rf ./.deps ./.pch
	rm -f ./*.o
	rm -f ownerdrw$(EXEEXT)
	rm -rf ownerdrw.app

distclean: clean
	rm -f config.cache config.log config.status bk-deps bk-make-pch shared-ld-sh Makefile

ownerdrw$(EXEEXT): $(OWNERDRW_OBJECTS) $(__ownerdrw___win32rc)
	$(CXX) -o $@ $(OWNERDRW_OBJECTS)    -L$(LIBDIRNAME) $(LDFLAGS_GUI) $(SAMPLES_RPATH_FLAG) $(LDFLAGS)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(EXTRALIBS_FOR_GUI) $(__LIB_ZLIB_p) $(__LIB_ODBC_p) $(__LIB_REGEX_p) $(__LIB_EXPAT_p) $(EXTRALIBS_FOR_BASE) $(LIBS)
	$(__ownerdrw___mac_rezcmd)
	$(__ownerdrw___mac_setfilecmd)
	$(__ownerdrw___os2_emxbindcmd)
	$(SAMPLES_RPATH_POSTLINK)

#ownerdrw.app/Contents/PkgInfo: ownerdrw$(EXEEXT) $(top_srcdir)/src/mac/carbon/Info.plist.in $(top_srcdir)/src/mac/carbon/wxmac.icns
#	mkdir -p ownerdrw.app/Contents
#	mkdir -p ownerdrw.app/Contents/MacOS
#	mkdir -p ownerdrw.app/Contents/Resources
#	
#	
#	sed -e "s/IDENTIFIER/`echo $(srcdir) | sed -e 's,\.\./,,g' | sed -e 's,/,.,g'`/" \
#	-e "s/EXECUTABLE/ownerdrw/" \
#	-e "s/VERSION/$(WX_VERSION)/" \
#	$(top_srcdir)/src/mac/carbon/Info.plist.in >ownerdrw.app/Contents/Info.plist
#	
#	
#	echo -n "APPL????" >ownerdrw.app/Contents/PkgInfo
#	
#	
#	ln -f ownerdrw$(EXEEXT) ownerdrw.app/Contents/MacOS/ownerdrw
#	
#	
#	cp -f $(top_srcdir)/src/mac/carbon/wxmac.icns ownerdrw.app/Contents/Resources/wxmac.icns

#ownerdrw_bundle: $(____ownerdrw_BUNDLE_TGT_REF_DEP)

data: 
	@mkdir -p .
	@for f in sound.png nosound.png; do \
	if test ! -f ./$$f -a ! -d ./$$f ; \
	then x=yep ; \
	else x=`find $(srcdir)/$$f -newer ./$$f -print` ; \
	fi; \
	case "$$x" in ?*) \
	cp -pRf $(srcdir)/$$f . ;; \
	esac; \
	done

ownerdrw_ownerdrw.o: $(srcdir)/ownerdrw.cpp
	$(CXXC) -c -o $@ $(OWNERDRW_CXXFLAGS) $(srcdir)/ownerdrw.cpp

ownerdrw_ownerdrw_rc.o: $(srcdir)/ownerdrw.rc
	$(WINDRES) -i$< -o$@    --define __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_2)   $(__EXCEPTIONS_DEFINE_p_2) $(__RTTI_DEFINE_p_2) $(__THREAD_DEFINE_p_2)   --include-dir $(srcdir) $(__DLLFLAG_p_2) --include-dir $(srcdir)/../../samples $(__RCDEFDIR_p_1) --include-dir $(top_srcdir)/include


# Include dependency info, if present:
-include ./.deps/*.d

.PHONY: all install uninstall clean distclean ownerdrw_bundle data
