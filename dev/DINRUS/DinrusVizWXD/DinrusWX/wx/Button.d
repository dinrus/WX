//-----------------------------------------------------------------------------
// wxD - Кнопка.d
// (C) 2005 bero <berobero.sourceforge.net>
// based on
// wx.NET - Кнопка.cs
//
/// The Кнопка wrapper class.
//
// Written by Bryan Bulten (bryan@bulten.ca)
// (C) 2003 Bryan Bulten
// Licensed under the wxWidgets license, see LICENSE.txt for details.
//
// $ид: Кнопка.d,v 1.12 2007/11/27 08:19:20 afb Exp $
//-----------------------------------------------------------------------------

module wx.Button;
public import wx.common;
public import wx.Control;
public import wx.Bitmap;

//! \cond EXTERN
extern (C) ЦелУкз wxButton_ctor();
extern (C) бул   wxButton_Create(ЦелУкз сам, ЦелУкз родитель, цел ид, ткст ярлык, inout Точка поз, inout Размер размер, бцел стиль, ЦелУкз оценщик, ткст имя);
extern (C) проц   wxButton_SetDefault(ЦелУкз сам);
extern (C) проц   wxButton_GetDefaultSize(out Размер размер);

extern (C) проц wxButton_SetImageMargins(ЦелУкз сам, цел x, цел y);
extern (C) проц wxButton_SetImageLabel(ЦелУкз сам, ЦелУкз битмап);

extern (C) проц wxButton_SetLabel(ЦелУкз сам, ткст ярлык);
//! \endcond

//---------------------------------------------------------------------

export class Кнопка : Контрол
{
    public const цел ЛЕВАЯ          =  0x0040;
    public const цел ВЕРХНЯЯ           =  0x0080;
    public const цел ПРАВАЯ         =  0x0100;
    public const цел НИЖНЯЯ        =  0x0200;
    public const цел ТОЧНОЕ_СОВПАДЕНИЕ      =  0x0001;

    //---------------------------------------------------------------------

    export this(ЦелУкз объ)
    {
        super(объ);
    }

    export this()
    {
        this(wxButton_ctor());
    }

    export this(Окно родитель, цел ид, ткст ярлык = "", Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ, цел стиль = 0, Оценщик оценщик = пусто, ткст имя = пусто)
    {
        this(wxButton_ctor());
        if (!создай(родитель, ид, ярлык, поз, размер, стиль, оценщик, имя))
        {
            throw new ИсклНевернОперации("Не удалось создать Кнопку");
        }
    }

    export static ВизОбъект Нов(ЦелУкз объ)
    {
        return new Кнопка(объ);
    }

    //---------------------------------------------------------------------
    // ctors with сам created ид

    export this(Окно родитель, ткст ярлык, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ, цел стиль = 0, Оценщик оценщик = пусто, ткст имя = пусто)
    {
        this(родитель, Окно.уникИд, ярлык, поз, размер, стиль, оценщик, имя);
    }

    //---------------------------------------------------------------------

    export бул создай(Окно родитель, цел ид, ткст ярлык, Точка поз, Размер размер, цел стиль, Оценщик оценщик, ткст имя)
    {
        return wxButton_Create(вхобъ, ВизОбъект.безопУк(родитель), ид, ярлык, поз, размер, cast(бцел)стиль, ВизОбъект.безопУк(оценщик), имя);
    }

    //---------------------------------------------------------------------

    export проц устДеф()
    {
        wxButton_SetDefault(this.м_вхобъ);
    }

    //---------------------------------------------------------------------

    export static Размер дайДефРазм()
    {
        Размер размер;
        wxButton_GetDefaultSize(размер);
        return размер;
    }

    //---------------------------------------------------------------------

    export  проц ярлыкСРисунком(Битмап значение)
    {
        wxButton_SetImageLabel(this.м_вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export  проц устКраяРисунка(цел x, цел y)
    {
        wxButton_SetImageMargins(this.м_вхобъ, x, y);
    }

    //---------------------------------------------------------------------
    // Do we need get also ?

    export override проц ярлык(ткст значение)
    {
        wxButton_SetLabel(this.м_вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export проц добавьНажатие(ДатчикСобытий значение)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_КНОПКА_НАЖАТА, ид, значение, this);
    }
    export проц удалиНажатие(ДатчикСобытий значение)
    {
        удалиОбработчик(значение, this);
    }
}

