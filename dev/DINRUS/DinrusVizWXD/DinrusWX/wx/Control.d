module wx.Control;
public import wx.common;
public import wx.Window;

//! \cond EXTERN
extern (C) проц   wxControl_Command(ЦелУкз сам, ЦелУкз соб);
extern (C) ЦелУкз wxControl_GetLabel(ЦелУкз сам);
extern (C) проц   wxControl_SetLabel(ЦелУкз сам, ткст ярлык);

extern (C) цел wxControl_GetAlignment(ЦелУкз сам);
extern (C) бул wxControl_SetFont(ЦелУкз сам, ЦелУкз шрифт);
//! \endcond

//---------------------------------------------------------------------

/// Класс-основа для элемента управления или "виджета".
/// Контрол - это, как правило, небольшое окно, которое обрабатывает пользовательский ввод
/// и/или показывает один или несколько элементов данных.
export class Контрол : Окно
{
    const ткст СтрИмениКонтрола = "контрол";

    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    export this(Окно родитель, цел ид, Точка поз=ДЕФПОЗ, Размер размер=ДЕФРАЗМ, цел стиль=0, ткст имя=СтрИмениКонтрола)
    {
        super(родитель, ид, поз, размер, стиль, имя);
    }

    export this(Окно родитель, Точка поз=ДЕФПОЗ, Размер размер=ДЕФРАЗМ, цел стиль=0, ткст имя=СтрИмениКонтрола)
    {
        super(родитель, Окно.уникИд, поз, размер, стиль, имя);
    }

    export static ВизОбъект Нов(ЦелУкз вхобъ)
    {
        return new Контрол(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц команда() {}

    //---------------------------------------------------------------------

    export ткст ярлык()
    {
        return cast(ткст) new ВизТкст(wxControl_GetLabel(this.м_вхобъ), да);
    }
    export проц ярлык(ткст значение)
    {
        wxControl_SetLabel(this.м_вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export цел дайРаскладку()
    {
        return wxControl_GetAlignment(this.м_вхобъ);
    }

    //---------------------------------------------------------------------

    export бул устШрифт(Шрифт шрифт)
    {
        return wxControl_SetFont(this.м_вхобъ, ВизОбъект.безопУк(шрифт));
    }
}

