module wx.DC;
public import wx.common;
public import wx.Window;
public import wx.Pen;
public import wx.Brush;
public import wx.ArrayInt;

//! \cond EXTERN
extern (C) проц   wxDC_dtor(ЦелУкз сам);
extern (C) проц   wxDC_DrawBitmap(ЦелУкз сам, ЦелУкз бмп, цел x, цел y, бул transparent);
extern (C) проц   wxDC_DrawPolygon(ЦелУкз сам, цел ч, Точка* точки, цел ширсмещ, цел выссмещ, цел fill_style);
extern (C) проц   wxDC_DrawLine(ЦелУкз сам, цел x1, цел y1, цел x2, цел y2);
extern (C) проц   wxDC_DrawRectangle(ЦелУкз сам, цел x1, цел y1, цел x2, цел y2);
extern (C) проц   wxDC_DrawText(ЦелУкз сам, ткст текст, цел x, цел y);
extern (C) проц   wxDC_DrawEllipse(ЦелУкз сам, цел x, цел y, цел ширь, цел высь);
extern (C) проц   wxDC_DrawPoint(ЦелУкз сам, цел x, цел y);
extern (C) проц   wxDC_DrawRoundedRectangle(ЦелУкз сам, цел x, цел y, цел ширь, цел высь, дво radius);

extern (C) проц   wxDC_SetBackgroundMode(ЦелУкз сам, ПСтильЗаливки режим);

extern (C) проц   wxDC_SetTextBackground(ЦелУкз сам, ЦелУкз цвет);
extern (C) ЦелУкз wxDC_GetTextBackground(ЦелУкз сам);

extern (C) проц   wxDC_SetBrush(ЦелУкз сам, ЦелУкз кисть);
extern (C) ЦелУкз wxDC_GetBrush(ЦелУкз сам);

extern (C) проц   wxDC_SetBackground(ЦелУкз сам, ЦелУкз кисть);
extern (C) ЦелУкз wxDC_GetBackground(ЦелУкз сам);

extern (C) проц   wxDC_SetPen(ЦелУкз сам, ЦелУкз перо);
extern (C) ЦелУкз wxDC_GetPen(ЦелУкз сам);

extern (C) проц   wxDC_SetTextForeground(ЦелУкз сам, ЦелУкз цвет);
extern (C) ЦелУкз wxDC_GetTextForeground(ЦелУкз сам);

extern (C) проц   wxDC_SetFont(ЦелУкз сам, ЦелУкз шрифт);
extern (C) ЦелУкз wxDC_GetFont(ЦелУкз сам);

extern (C) проц   wxDC_GetTextExtent(ЦелУкз сам, ткст стр, out цел x, out цел y, out цел descent, out цел внешнееВступление, ЦелУкз theFont);
extern (C) проц   wxDC_Clear(ЦелУкз сам);

extern (C) проц   wxDC_DestroyClippingRegion(ЦелУкз сам);
extern (C) проц   wxDC_SetClippingRegion(ЦелУкз сам, цел x, цел y, цел ширь, цел высь);
extern (C) проц   wxDC_SetClippingRegionPos(ЦелУкз сам, inout Точка поз, inout Размер размер);
extern (C) проц   wxDC_SetClippingRegionRect(ЦелУкз сам, inout Прямоугольник прям);
extern (C) проц   wxDC_SetClippingRegionReg(ЦелУкз сам, ЦелУкз рег);

extern (C) цел    wxDC_GetLogicalFunction(ЦелУкз сам);
extern (C) проц   wxDC_SetLogicalFunction(ЦелУкз сам, цел функц);

extern (C) бул   wxDC_BeginDrawing(ЦелУкз сам);
extern (C) бул   wxDC_Blit(ЦелУкз сам, цел цельХ, цел цельУ, цел ширь, цел высь, ЦелУкз исток, цел исхХ, цел исхУ, цел rop, бул испМаску, цел маскаИсхХ, цел маскаИсхУ);
extern (C) проц   wxDC_EndDrawing(ЦелУкз сам);

extern (C) бул   wxDC_FloodFill(ЦелУкз сам, цел x, цел y, ЦелУкз кол, цел стиль);

extern (C) бул   wxDC_GetPixel(ЦелУкз сам, цел x, цел y, ЦелУкз кол);

extern (C) проц   wxDC_CrossHair(ЦелУкз сам, цел x, цел y);

extern (C) проц   wxDC_DrawArc(ЦелУкз сам, цел x1, цел y1, цел x2, цел y2, цел xc, цел yc);

extern (C) проц   wxDC_DrawCheckMark(ЦелУкз сам, цел x, цел y, цел ширь, цел высь);

extern (C) проц   wxDC_DrawEllipticArc(ЦелУкз сам, цел x, цел y, цел w, цел h, дво sa, дво ea);

extern (C) проц   wxDC_DrawLines(ЦелУкз сам, цел ч, Точка* точки, цел ширсмещ, цел выссмещ);

extern (C) проц   wxDC_DrawCircle(ЦелУкз сам, цел x, цел y, цел radius);

extern (C) проц   wxDC_DrawIcon(ЦелУкз сам, ЦелУкз пиктограмма, цел x, цел y);

extern (C) проц   wxDC_DrawRotatedText(ЦелУкз сам, ткст текст, цел x, цел y, дво угол);

extern (C) проц   wxDC_DrawLabel(ЦелУкз сам, ткст текст, ЦелУкз рисунок, inout Прямоугольник прям, цел раскладка, цел индАксель, inout Прямоугольник rectBounding);
extern (C) проц   wxDC_DrawLabel2(ЦелУкз сам, ткст текст, inout Прямоугольник прям, цел раскладка, цел индАксель);

extern (C) проц   wxDC_DrawSpline(ЦелУкз сам, цел x1, цел y1, цел x2, цел y2, цел x3, цел y3);
extern (C) проц   wxDC_DrawSpline2(ЦелУкз сам, цел ч, Точка* точки);

extern (C) бул   wxDC_StartDoc(ЦелУкз сам, ткст сообщение);
extern (C) проц   wxDC_EndDoc(ЦелУкз сам);
extern (C) проц   wxDC_StartPage(ЦелУкз сам);
extern (C) проц   wxDC_EndPage(ЦелУкз сам);

extern (C) проц   wxDC_GetClippingBox(ЦелУкз сам, out цел x, out цел y, out цел w, out цел h);
extern (C) проц   wxDC_GetClippingBox2(ЦелУкз сам, out Прямоугольник прям);

extern (C) проц   wxDC_GetMultiLineTextExtent(ЦелУкз сам, ткст текст, out цел ширь, out цел высь, out цел выслиния, ЦелУкз шрифт);

extern (C) бул   wxDC_GetPartialTextExtents(ЦелУкз сам, ткст текст, ЦелУкз ширины);

extern (C) проц   wxDC_GetSize(ЦелУкз сам, out цел ширь, out цел высь);
extern (C) проц   wxDC_GetSize2(ЦелУкз сам, inout Размер размер);
extern (C) проц   wxDC_GetSizeMM(ЦелУкз сам, out цел ширь, out цел высь);
extern (C) проц   wxDC_GetSizeMM2(ЦелУкз сам, inout Размер размер);

extern (C) цел    wxDC_DeviceToLogicalX(ЦелУкз сам, цел x);
extern (C) цел    wxDC_DeviceToLogicalY(ЦелУкз сам, цел y);
extern (C) цел    wxDC_DeviceToLogicalXRel(ЦелУкз сам, цел x);
extern (C) цел    wxDC_DeviceToLogicalYRel(ЦелУкз сам, цел y);
extern (C) цел    wxDC_LogicalToDeviceX(ЦелУкз сам, цел x);
extern (C) цел    wxDC_LogicalToDeviceY(ЦелУкз сам, цел y);
extern (C) цел    wxDC_LogicalToDeviceXRel(ЦелУкз сам, цел x);
extern (C) цел    wxDC_LogicalToDeviceYRel(ЦелУкз сам, цел y);

extern (C) бул   wxDC_Ok(ЦелУкз сам);

extern (C) цел    wxDC_GetBackgroundMode(ЦелУкз сам);

extern (C) цел    wxDC_GetMapMode(ЦелУкз сам);
extern (C) проц   wxDC_SetMapMode(ЦелУкз сам, цел режим);

extern (C) проц   wxDC_GetUserScale(ЦелУкз сам, out дво x, out дво y);
extern (C) проц   wxDC_SetUserScale(ЦелУкз сам, дво x, дво y);

extern (C) проц   wxDC_GetLogicalScale(ЦелУкз сам, out дво x, out дво y);
extern (C) проц   wxDC_SetLogicalScale(ЦелУкз сам, дво x, дво y);

extern (C) проц   wxDC_GetLogicalOrigin(ЦелУкз сам, out цел x, out цел y);
extern (C) проц   wxDC_GetLogicalOrigin2(ЦелУкз сам, inout Точка тчк);
extern (C) проц   wxDC_SetLogicalOrigin(ЦелУкз сам, цел x, цел y);

extern (C) проц   wxDC_GetDeviceOrigin(ЦелУкз сам, out цел x, out цел y);
extern (C) проц   wxDC_GetDeviceOrigin2(ЦелУкз сам, inout Точка тчк);
extern (C) проц   wxDC_SetDeviceOrigin(ЦелУкз сам, цел x, цел y);

extern (C) проц   wxDC_SetAxisOrientation(ЦелУкз сам, бул левоПравоХ, бул низВерхУ);

extern (C) проц   wxDC_CalcBoundingBox(ЦелУкз сам, цел x, цел y);
extern (C) проц   wxDC_ResetBoundingBox(ЦелУкз сам);

extern (C) цел    wxDC_MinX(ЦелУкз сам);
extern (C) цел    wxDC_MaxX(ЦелУкз сам);
extern (C) цел    wxDC_MinY(ЦелУкз сам);
extern (C) цел    wxDC_MaxY(ЦелУкз сам);
//! \endcond

export class КонтекстУстройства : ВизОбъект
{
    //---------------------------------------------------------------------

    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    override protected проц dtor()
    {
        wxDC_dtor(вхобъ);
    }
	//----------------------------
		export ~this(){this.dtor();}
	//----------------------------
    //---------------------------------------------------------------------

    export проц режимФона(ПСтильЗаливки значение)
    {
        wxDC_SetBackgroundMode(вхобъ, значение);
    }
    export ПСтильЗаливки режимФона()
    {
        return cast(ПСтильЗаливки)wxDC_GetBackgroundMode(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц кисть(Кисть значение)
    {
        wxDC_SetBrush(вхобъ, ВизОбъект.безопУк(значение));
    }
    export Кисть кисть()
    {
        return new Кисть(wxDC_GetBrush(вхобъ));
    }

    export проц фон(Кисть значение)
    {
        wxDC_SetBackground(вхобъ, ВизОбъект.безопУк(значение));
    }
    export Кисть фон()
    {
        return new Кисть(wxDC_GetBackground(вхобъ));
    }

    //---------------------------------------------------------------------

    export проц рисуйБитмап(Битмап бмп, цел x, цел y, бул испМаску)
    {
        wxDC_DrawBitmap(вхобъ, ВизОбъект.безопУк(бмп), x, y, испМаску);
    }

    export проц рисуйБитмап(Битмап бмп, цел x, цел y)
    {
        рисуйБитмап(бмп, x, y, нет);
    }

    export проц рисуйБитмап(Битмап бмп, Точка тчк, бул испМаску)
    {
        рисуйБитмап(бмп, тчк.Х, тчк.У, испМаску);
    }

    export проц рисуйБитмап(Битмап бмп, Точка тчк)
    {
        рисуйБитмап(бмп, тчк.Х, тчк.У, нет);
    }

    //---------------------------------------------------------------------

    export проц рисуйЭллипс(цел x, цел y, цел ширь, цел высь)
    {
        wxDC_DrawEllipse(вхобъ, x, y, ширь, высь);
    }

    export проц рисуйЭллипс(Точка тчк, wx.common.Размер рм)
    {
        рисуйЭллипс(тчк.Х, тчк.У, рм.ширь, рм.высь);
    }

    export проц рисуйЭллипс(Прямоугольник прям)
    {
        рисуйЭллипс(прям.Х, прям.У, прям.ширь, прям.высь);
    }

    //---------------------------------------------------------------------

    export проц рисуйТочку(цел x, цел y)
    {
        wxDC_DrawPoint(вхобъ, x, y);
    }

    export проц рисуйТочку(Точка тчк)
    {
        рисуйТочку(тчк.Х, тчк.У);
    }

    //---------------------------------------------------------------------

    export проц рисуйЛинию(Точка p1, Точка p2)
    {
        рисуйЛинию(p1.Х, p1.У, p2.Х, p2.У);
    }

    export проц рисуйЛинию(цел x1, цел y1, цел x2, цел y2)
    {
        wxDC_DrawLine(вхобъ, x1, y1, x2, y2);
    }

    //---------------------------------------------------------------------

    export проц рисуйПолигон(Точка[] точки)
    {
        рисуйПолигон(точки.length, точки, 0, 0, ПСтильЗаливки.wxODDEVEN_RULE);
    }

    export проц рисуйПолигон(Точка[] точки, цел ширсмещ, цел выссмещ)
    {
        рисуйПолигон(точки.length, точки, ширсмещ, выссмещ, ПСтильЗаливки.wxODDEVEN_RULE);
    }

    export проц рисуйПолигон(Точка[] точки, цел ширсмещ, цел выссмещ, ПСтильЗаливки fill_style)
    {
        рисуйПолигон(точки.length, точки, ширсмещ, выссмещ, fill_style);
    }

    export проц рисуйПолигон(цел ч, Точка[] точки)
    {
        рисуйПолигон(ч, точки, 0, 0, ПСтильЗаливки.wxODDEVEN_RULE);
    }

    export проц рисуйПолигон(цел ч, Точка[] точки, цел ширсмещ, цел выссмещ)
    {
        рисуйПолигон(ч, точки, ширсмещ, выссмещ, ПСтильЗаливки.wxODDEVEN_RULE);
    }

    export проц рисуйПолигон(цел ч, Точка[] точки, цел ширсмещ, цел выссмещ, ПСтильЗаливки fill_style)
    {
        wxDC_DrawPolygon(вхобъ, ч, точки.ptr, ширсмещ, выссмещ, cast(цел)fill_style);
    }

    //---------------------------------------------------------------------

    export проц рисуйПрямоугольник(цел x1, цел y1, цел x2, цел y2)
    {
        wxDC_DrawRectangle(вхобъ, x1, y1, x2, y2);
    }

    export проц рисуйПрямоугольник(Точка тчк, wx.common.Размер рм)
    {
        рисуйПрямоугольник(тчк.Х, тчк.У, рм.ширь, рм.высь);
    }

    export проц рисуйПрямоугольник(Прямоугольник прям)
    {
        wxDC_DrawRectangle(вхобъ, прям.Х, прям.У, прям.ширь, прям.высь);
    }

    //---------------------------------------------------------------------

    export проц рисуйТекст(ткст текст, цел x, цел y)
    {
        wxDC_DrawText(вхобъ, текст, x, y);
    }

    export проц рисуйТекст(ткст текст, Точка поз)
    {
        wxDC_DrawText(вхобъ, текст, поз.Х, поз.У);
    }

    //---------------------------------------------------------------------

    export проц рисуйЗакруглённПрямоугольник(цел x, цел y, цел ширь, цел высь, дво radius)
    {
        wxDC_DrawRoundedRectangle(вхобъ, x, y, ширь, высь, radius);
    }

    export проц рисуйЗакруглённПрямоугольник(Точка тчк, wx.common.Размер рм, дво radius)
    {
        рисуйЗакруглённПрямоугольник(тчк.Х, тчк.У, рм.ширь, рм.высь, radius);
    }

    export проц рисуйЗакруглённПрямоугольник(Прямоугольник к, дво radius)
    {
        рисуйЗакруглённПрямоугольник(к.Х, к.У, к.ширь, к.высь, radius);
    }

    //---------------------------------------------------------------------

    export проц перо(Перо значение)
    {
        wxDC_SetPen(вхобъ, значение.вхобъ);
    }
    export Перо перо()
    {
        return cast(Перо)найдиОбъект(wxDC_GetPen(вхобъ), &Перо.Нов);
    }

    //---------------------------------------------------------------------

    export Цвет ппТекста()
    {
        return cast(Цвет)найдиОбъект(wxDC_GetTextForeground(вхобъ), &Цвет.Нов);
    }
    export проц ппТекста(Цвет значение)
    {
        wxDC_SetTextForeground(вхобъ, ВизОбъект.безопУк(значение));
    }

    export Цвет зпТекста()
    {
        return cast(Цвет)найдиОбъект(wxDC_GetTextBackground(вхобъ), &Цвет.Нов);
    }
    export проц зпТекста(Цвет значение)
    {
        wxDC_SetTextBackground(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export Шрифт шрифт()
    {
        return cast(Шрифт)найдиОбъект(wxDC_GetFont(вхобъ), &Шрифт.Нов);
    }
    export проц шрифт(Шрифт значение)
    {
        wxDC_SetFont(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export  проц очисть()
    {
        wxDC_Clear(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц дайПротяженностьТекста(ткст стр, out цел x, out цел y)
    {
        // Ignoring these parameters
        цел descent;
        цел внешнееВступление;

        дайПротяженностьТекста(стр, x, y, descent, внешнееВступление, пусто);
    }

    export проц дайПротяженностьТекста(ткст стр, out цел x, out цел y, out цел descent, out цел внешнееВступление, Шрифт theFont)
    {
        wxDC_GetTextExtent(вхобъ, стр, x, y, descent, внешнееВступление, ВизОбъект.безопУк(theFont));
    }

    //---------------------------------------------------------------------

    export проц удалиКлипОбласть()
    {
        wxDC_DestroyClippingRegion(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц устКлипОбласть(цел x, цел y, цел ширь, цел высь)
    {
        wxDC_SetClippingRegion(вхобъ, x, y, ширь, высь);
    }

    export проц устКлипОбласть(Точка поз, wx.common.Размер размер)
    {
        wxDC_SetClippingRegionPos(вхобъ, поз, размер);
    }

    export проц устКлипОбласть(Прямоугольник прям)
    {
        wxDC_SetClippingRegionRect(вхобъ, прям);
    }

    export проц устКлипОбласть(Регион рег)
    {
        wxDC_SetClippingRegionReg(вхобъ, ВизОбъект.безопУк(рег));
    }

    //---------------------------------------------------------------------

    export ПЛогика логФункция()
    {
        return cast(ПЛогика)wxDC_GetLogicalFunction(вхобъ);
    }
    export проц логФункция(ПЛогика значение)
    {
        wxDC_SetLogicalFunction(вхобъ, cast(цел)значение);
    }

    //---------------------------------------------------------------------

    export проц стартрис()
    {
        wxDC_BeginDrawing(вхобъ);
    }

    //---------------------------------------------------------------------

    export бул блит(цел цельХ, цел цельУ, цел ширь, цел высь, КонтекстУстройства исток, цел исхХ, цел исхУ, цел rop, бул испМаску, цел маскаИсхХ, цел маскаИсхУ)
    {
        return wxDC_Blit(вхобъ, цельХ, цельУ, ширь, высь, ВизОбъект.безопУк(исток), исхХ, исхУ, rop, испМаску, маскаИсхХ, маскаИсхУ);
    }

    export бул блит(цел цельХ, цел цельУ, цел ширь, цел высь, КонтекстУстройства исток)
    {
        return блит(цельХ, цельУ, ширь, высь, исток, 0, 0, cast(цел) ПЛогика.wxCOPY, нет, -1, -1);
    }

    export бул блит(цел цельХ, цел цельУ, цел ширь, цел высь, КонтекстУстройства исток, цел исхХ, цел исхУ)
    {
        return блит(цельХ, цельУ, ширь, высь, исток, исхХ, исхУ, cast(цел)ПЛогика.wxCOPY, нет, -1, -1);
    }

    export бул блит(цел цельХ, цел цельУ, цел ширь, цел высь, КонтекстУстройства исток, цел исхХ, цел исхУ, цел rop)
    {
        return блит(цельХ, цельУ, ширь, высь, исток, исхХ, исхУ, rop, нет, -1, -1);
    }

    export бул блит(цел цельХ, цел цельУ, цел ширь, цел высь, КонтекстУстройства исток, цел исхХ, цел исхУ, цел rop, бул испМаску)
    {
        return блит(цельХ, цельУ, ширь, высь, исток, исхХ, исхУ, rop, испМаску, -1, -1);
    }

    export бул блит(цел цельХ, цел цельУ, цел ширь, цел высь, КонтекстУстройства исток, цел исхХ, цел исхУ, цел rop, бул испМаску, цел маскаИсхХ)
    {
        return блит(цельХ, цельУ, ширь, высь, исток, исхХ, исхУ, rop, испМаску, маскаИсхХ, -1);
    }

    export бул блит(Точка цельТчк, wx.common.Размер рм, КонтекстУстройства исток, Точка исхТчк, цел rop, бул испМаску, Точка маскаИсхТчк)
    {
        return блит(цельТчк.Х, цельТчк.У, рм.ширь, рм.высь, исток, исхТчк.Х, исхТчк.У, rop, испМаску, маскаИсхТчк.Х, маскаИсхТчк.У);
    }

    export бул блит(Точка цельТчк, wx.common.Размер рм, КонтекстУстройства исток, Точка исхТчк)
    {
        return блит(цельТчк.Х, цельТчк.У, рм.ширь, рм.высь, исток, исхТчк.Х, исхТчк.У, cast(цел)ПЛогика.wxCOPY, нет, -1, -1);
    }

    export бул блит(Точка цельТчк, wx.common.Размер рм, КонтекстУстройства исток, Точка исхТчк, цел rop)
    {
        return блит(цельТчк.Х, цельТчк.У, рм.ширь, рм.высь, исток, исхТчк.Х, исхТчк.У, rop, нет, -1, -1);
    }

    export бул блит(Точка цельТчк, wx.common.Размер рм, КонтекстУстройства исток, Точка исхТчк, цел rop, бул испМаску)
    {
        return блит(цельТчк.Х, цельТчк.У, рм.ширь, рм.высь, исток, исхТчк.Х, исхТчк.У, rop, испМаску, -1, -1);
    }

    //---------------------------------------------------------------------

    export проц стоприс()
    {
        wxDC_EndDrawing(вхобъ);
    }

    //---------------------------------------------------------------------

    export бул залейФлуд(цел x, цел y, Цвет кол)
    {
        return залейФлуд(x, y, кол, ПСтильФлуда.Поверхность);
    }

    export бул залейФлуд(цел x, цел y, Цвет кол, цел стиль)
    {
        return wxDC_FloodFill(вхобъ, x, y, ВизОбъект.безопУк(кол), стиль);
    }

    export бул залейФлуд(Точка тчк, Цвет кол)
    {
        return залейФлуд(тчк, кол, ПСтильФлуда.Поверхность);
    }

    export бул залейФлуд(Точка тчк, Цвет кол, цел стиль)
    {
        return залейФлуд(тчк.Х, тчк.У, кол, стиль);
    }

    //---------------------------------------------------------------------

    export бул дайПиксель(цел x, цел y, Цвет кол)
    {
        return wxDC_GetPixel(вхобъ, x, y, ВизОбъект.безопУк(кол));
    }

    export бул дайПиксель(Точка тчк, Цвет кол)
    {
        return дайПиксель(тчк.Х, тчк.У, кол);
    }

    //---------------------------------------------------------------------

    export проц CrossHair(цел x, цел y)
    {
        wxDC_CrossHair(вхобъ, x, y);
    }

    export проц CrossHair(Точка тчк)
    {
        CrossHair(тчк.Х, тчк.У);
    }

    //---------------------------------------------------------------------

    export проц рисуйДугу(цел x1, цел y1, цел x2, цел y2, цел xc, цел yc)
    {
        wxDC_DrawArc(вхобъ, x1, y1, x2, y2, xc, yc);
    }

    export проц рисуйДугу(Точка pt1, Точка pt2, Точка центр)
    {
        рисуйДугу(pt1.Х, pt1.У, pt2.Х, pt2.У, центр.Х, центр.У);
    }

    //---------------------------------------------------------------------

    export проц рисуйЧекМарк(цел x, цел y, цел ширь, цел высь)
    {
        wxDC_DrawCheckMark(вхобъ, x, y, ширь, высь);
    }

    export проц рисуйЧекМарк(Прямоугольник прям)
    {
        рисуйЧекМарк(прям.Х, прям.У, прям.ширь, прям.высь);
    }

    //---------------------------------------------------------------------

    export проц рисуйЭллиптичДугу(цел x, цел y, цел w, цел h, дво sa, дво ea)
    {
        wxDC_DrawEllipticArc(вхобъ, x, y, w, h, sa, ea);
    }

    export проц рисуйЭллиптичДугу(Точка тчк, wx.common.Размер рм, дво sa, дво ea)
    {
        рисуйЭллиптичДугу(тчк.Х, тчк.У, рм.ширь, рм.высь, sa, ea);
    }

    //---------------------------------------------------------------------

    export проц рисуйЛинии(Точка[] точки, цел ширсмещ, цел выссмещ)
    {
        wxDC_DrawLines(вхобъ, точки.length, точки.ptr, ширсмещ, выссмещ);
    }

    export проц рисуйЛинии(Точка[] точки)
    {
        рисуйЛинии(точки, 0, 0);
    }

    export проц рисуйЛинии(Точка[] точки, цел ширсмещ)
    {
        рисуйЛинии(точки, ширсмещ, 0);
    }

    //---------------------------------------------------------------------

    export проц рисуйКруг(цел x, цел y, цел radius)
    {
        wxDC_DrawCircle(вхобъ, x, y, radius);
    }

    export проц рисуйКруг(Точка тчк, цел radius)
    {
        рисуйКруг(тчк.Х, тчк.У, radius);
    }

    //---------------------------------------------------------------------

    export проц рисуйИконку(Пиктограмма пиктограмма, цел x, цел y)
    {
        wxDC_DrawIcon(вхобъ, ВизОбъект.безопУк(пиктограмма), x, y);
    }

    export проц рисуйИконку(Пиктограмма пиктограмма, Точка тчк)
    {
        рисуйИконку(пиктограмма, тчк.Х, тчк.У);
    }

    //---------------------------------------------------------------------

    export проц рисуйВращТекст(ткст текст, цел x, цел y, дво угол)
    {
        wxDC_DrawRotatedText(вхобъ, текст, x, y, угол);
    }

    export проц рисуйВращТекст(ткст текст, Точка тчк, дво угол)
    {
        рисуйВращТекст(текст, тчк.Х, тчк.У, угол);
    }

    //---------------------------------------------------------------------

    export  проц рисуйНадпись(ткст текст, Битмап рисунок, Прямоугольник прям, цел раскладка, цел индАксель, inout Прямоугольник rectBounding)
    {
        wxDC_DrawLabel(вхобъ, текст, ВизОбъект.безопУк(рисунок), прям, раскладка, индАксель, rectBounding);
    }

    export  проц рисуйНадпись(ткст текст, Битмап рисунок, Прямоугольник прям)
    {
        Прямоугольник dummy;
        рисуйНадпись(текст, рисунок, прям, cast(цел)(ПРаскладка.Слева | ПРаскладка.Вверху), -1, dummy);
    }

    export  проц рисуйНадпись(ткст текст, Битмап рисунок, Прямоугольник прям, цел раскладка)
    {
        Прямоугольник dummy;
        рисуйНадпись(текст, рисунок, прям, раскладка, -1, dummy);
    }

    export  проц рисуйНадпись(ткст текст, Битмап рисунок, Прямоугольник прям, цел раскладка, цел индАксель)
    {
        Прямоугольник dummy;
        рисуйНадпись(текст, рисунок, прям, раскладка, индАксель, dummy);
    }

    //---------------------------------------------------------------------

    export проц рисуйНадпись(ткст текст, Прямоугольник прям, цел раскладка, цел индАксель)
    {
        wxDC_DrawLabel2(вхобъ, текст, прям, раскладка, индАксель);
    }

    export проц рисуйНадпись(ткст текст, Прямоугольник прям)
    {
        рисуйНадпись(текст, прям, cast(цел)(ПРаскладка.Слева | ПРаскладка.Вверху), -1);
    }

    export проц рисуйНадпись(ткст текст, Прямоугольник прям, цел раскладка)
    {
        рисуйНадпись(текст, прям, раскладка, -1);
    }

    //---------------------------------------------------------------------

    export проц РисуйСплин(цел x1, цел y1, цел x2, цел y2, цел x3, цел y3)
    {
        wxDC_DrawSpline(вхобъ, x1, y1, x2, y2, x3, y3);
    }

    export проц РисуйСплин(Точка[] точки)
    {
        wxDC_DrawSpline2(вхобъ, точки.length, точки.ptr);
    }

    //---------------------------------------------------------------------

    export  бул стартДок(ткст сообщение)
    {
        return wxDC_StartDoc(вхобъ, сообщение);
    }

    //---------------------------------------------------------------------

    export  проц стопДок()
    {
        wxDC_EndDoc(вхобъ);
    }

    //---------------------------------------------------------------------

    export  проц стартСтраницы()
    {
        wxDC_StartPage(вхобъ);
    }

    //---------------------------------------------------------------------

    export  проц стопСтраницы()
    {
        wxDC_EndPage(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц дайБоксОбрезки(out цел x, out цел y, out цел w, out цел h)
    {
        wxDC_GetClippingBox(вхобъ, x, y, w, h);
    }

    export проц дайБоксОбрезки(out Прямоугольник прям)
    {
        wxDC_GetClippingBox2(вхобъ, прям);
    }

    //---------------------------------------------------------------------

    export  проц дайПротяжённостьМногострочнТекста(ткст текст, out цел ширь, out цел высь, out цел выслиния, Шрифт шрифт)
    {
        wxDC_GetMultiLineTextExtent(вхобъ, текст, ширь, высь, выслиния, ВизОбъект.безопУк(шрифт));
    }

    export  проц дайПротяжённостьМногострочнТекста(ткст текст, out цел ширь, out цел высь)
    {
        цел выслиния;

        дайПротяжённостьМногострочнТекста(текст, ширь, высь, выслиния, пусто);
    }

    export  проц дайПротяжённостьМногострочнТекста(ткст текст, out цел ширь, out цел высь, out цел выслиния)
    {
        дайПротяжённостьМногострочнТекста(текст, ширь, высь, выслиния, пусто);
    }

    //---------------------------------------------------------------------

    export бул дайЧастичнПротяжённостиТекста(ткст текст, цел[] ширины)
    {
        ЦелМассив ai = new ЦелМассив();

        for(цел i = 0; i < ширины.length; ++i)
            ai.добавь(ширины[i]);

        return wxDC_GetPartialTextExtents(вхобъ, текст, ЦелМассив.безопУк(ai));
    }

    //---------------------------------------------------------------------

    export проц дайРазм(out цел ширь, out цел высь)
    {
        wxDC_GetSize(вхобъ, ширь, высь);
    }

    export Размер размер()
    {
        Размер размер;
        wxDC_GetSize2(вхобъ, размер);
        return размер;
    }

    //---------------------------------------------------------------------

    export проц дайРазмКП(out цел ширь, out цел высь) //MM = memory map =карта памяти = КП
    {
        wxDC_GetSizeMM(вхобъ, ширь, высь);
    }

    export Размер размерКП()
    {
        Размер размер;
        wxDC_GetSizeMM2(вхобъ, размер);
        return размер;
    }

    //---------------------------------------------------------------------

    export цел устрВЛогХ(цел x)
    {
        return wxDC_DeviceToLogicalX(вхобъ, x);
    }

    //---------------------------------------------------------------------

    export цел устрВЛогУ(цел y)
    {
        return wxDC_DeviceToLogicalY(вхобъ, y);
    }

    //---------------------------------------------------------------------

    export цел устрВЛогХОтн(цел x)
    {
        return wxDC_DeviceToLogicalXRel(вхобъ, x);
    }

    //---------------------------------------------------------------------

    export цел устрВЛогУОтн(цел y)
    {
        return wxDC_DeviceToLogicalYRel(вхобъ, y);
    }

    //---------------------------------------------------------------------

    export цел логВУстрХ(цел x)
    {
        return wxDC_LogicalToDeviceX(вхобъ, x);
    }

    //---------------------------------------------------------------------

    export цел логВУстрУ(цел y)
    {
        return wxDC_LogicalToDeviceY(вхобъ, y);
    }

    //---------------------------------------------------------------------

    export цел логВУстрХОтн(цел x)
    {
        return wxDC_LogicalToDeviceXRel(вхобъ, x);
    }

    //---------------------------------------------------------------------

    export цел логВУстрУОтн(цел y)
    {
        return wxDC_LogicalToDeviceYRel(вхобъ, y);
    }

    //---------------------------------------------------------------------

    export  бул Ок()
    {
        return wxDC_Ok(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел режимСоответствия()
    {
        return wxDC_GetMapMode(вхобъ);
    }
    export проц режимСоответствия(цел значение)
    {
        wxDC_SetMapMode(вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export  проц дайПользовательскМасштаб(out дво x, out дво y)
    {
        wxDC_GetUserScale(вхобъ, x, y);
    }

    export  проц устПользовательскМасштаб(дво x, дво y)
    {
        wxDC_SetUserScale(вхобъ, x, y);
    }

    //---------------------------------------------------------------------

    export  проц дайЛогичМасштаб(out дво x, out дво y)
    {
        wxDC_GetLogicalScale(вхобъ, x, y);
    }

    export  проц устЛогичМасштаб(дво x, дво y)
    {
        wxDC_SetLogicalScale(вхобъ, x, y);
    }

    //---------------------------------------------------------------------

    export проц дайЛогичИсхТочку(out цел x, out цел y)
    {
        wxDC_GetLogicalOrigin(вхобъ, x, y);
    }

    export Точка логичИсхТочка()
    {
        Точка тчк;
        wxDC_GetLogicalOrigin2(вхобъ, тчк);
        return тчк;
    }

    export проц устЛогичИсхТочку(цел x, цел y)
    {
        wxDC_SetLogicalOrigin(вхобъ, x, y);
    }

    //---------------------------------------------------------------------

    export проц дайИсхТочкуУстройства(out цел x, out цел y)
    {
        wxDC_GetDeviceOrigin(вхобъ, x, y);
    }

    export Точка исхТочкаУстройства()
    {
        Точка тчк;
        wxDC_GetDeviceOrigin2(вхобъ, тчк);
        return тчк;
    }

    export проц устИсхТочкуУстройства(цел x, цел y)
    {
        wxDC_SetDeviceOrigin(вхобъ, x, y);
    }

    //---------------------------------------------------------------------

    export проц устОриентациюОси(бул левоПравоХ, бул низВерхУ)
    {
        wxDC_SetAxisOrientation(вхобъ, левоПравоХ, низВерхУ);
    }

    //---------------------------------------------------------------------

    export  проц вычислиОграничивающБокс(цел x, цел y)
    {
        wxDC_CalcBoundingBox(вхобъ, x, y);
    }

    //---------------------------------------------------------------------

    export проц сбросьОграничивающБокс()
    {
        wxDC_ResetBoundingBox(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел минХ()
    {
        return wxDC_MinX(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел максХ()
    {
        return wxDC_MaxX(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел минУ()
    {
        return wxDC_MinY(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел максУ()
    {
        return wxDC_MaxY(вхобъ);
    }

    export static ВизОбъект Нов(ЦелУкз ptr)
    {
        return new КонтекстУстройства(ptr);
    }
}

//---------------------------------------------------------------------

//! \cond EXTERN
extern (C) ЦелУкз wxWindowDC_ctor();
extern (C) ЦелУкз wxWindowDC_ctor2(ЦелУкз ок);
extern (C) бул wxWindowDC_CanDrawBitmap(ЦелУкз сам);
extern (C) бул wxWindowDC_CanGetTextExtent(ЦелУкз сам);
extern (C) цел wxWindowDC_GetCharWidth(ЦелУкз сам);
extern (C) цел wxWindowDC_GetCharHeight(ЦелУкз сам);
extern (C) проц wxWindowDC_Clear(ЦелУкз сам);
extern (C) проц wxWindowDC_SetFont(ЦелУкз сам, ЦелУкз шрифт);
extern (C) проц wxWindowDC_SetPen(ЦелУкз сам, ЦелУкз перо);
extern (C) проц wxWindowDC_SetBrush(ЦелУкз сам, ЦелУкз кисть);
extern (C) проц wxWindowDC_SetBackground(ЦелУкз сам, ЦелУкз кисть);
extern (C) проц wxWindowDC_SetLogicalFunction(ЦелУкз сам, цел функц);
extern (C) проц wxWindowDC_SetTextForeground(ЦелУкз сам, ЦелУкз цвет);
extern (C) проц wxWindowDC_SetTextBackground(ЦелУкз сам, ЦелУкз цвет);
extern (C) проц wxWindowDC_SetBackgroundMode(ЦелУкз сам, цел режим);
extern (C) проц wxWindowDC_SetPalette(ЦелУкз сам, ЦелУкз палитра);
extern (C) проц wxWindowDC_GetPPI(ЦелУкз сам, inout Размер размер);
extern (C) цел wxWindowDC_GetDepth(ЦелУкз сам);
//! \endcond

//---------------------------------------------------------------------

export class КУОкна : КонтекстУстройства
{
    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    private this(ЦелУкз вхобъ, бул памСобств)
    {
        super(вхобъ);
        this.памСобств = памСобств;
    }

    export this()
    {
        this(wxWindowDC_ctor(), да);
    }

    export this(Окно ок)
    {
        this(wxWindowDC_ctor2(ВизОбъект.безопУк(ок)), да);
    }

    //---------------------------------------------------------------------

    export бул можноРисоватьБитмап()
    {
        return wxWindowDC_CanDrawBitmap(вхобъ);
    }

    //---------------------------------------------------------------------

    export бул можноПолучитьПротяжённостьТекста()
    {
        return wxWindowDC_CanGetTextExtent(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел дайШиринуСим()
    {
        return wxWindowDC_GetCharWidth(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел дайВысотуСим()
    {
        return wxWindowDC_GetCharHeight(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел высьСим()
    {
        return wxWindowDC_GetCharHeight(вхобъ);
    }

    //---------------------------------------------------------------------

    export цел ширьСим()
    {
        return wxWindowDC_GetCharWidth(вхобъ);
    }

    //---------------------------------------------------------------------

    export override проц очисть()
    {
        wxWindowDC_Clear(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц устШрифт(Шрифт шрифт)
    {
        wxWindowDC_SetFont(вхобъ, ВизОбъект.безопУк(шрифт));
    }

    //---------------------------------------------------------------------

    export проц устПеро(Перо перо)
    {
        wxWindowDC_SetPen(вхобъ, ВизОбъект.безопУк(перо));
    }

    //---------------------------------------------------------------------

    export проц устКисть(Кисть кисть)
    {
        wxWindowDC_SetBrush(вхобъ, ВизОбъект.безопУк(кисть));
    }

    //---------------------------------------------------------------------

    export проц устФон(Кисть кисть)
    {
        wxWindowDC_SetBackground(вхобъ, ВизОбъект.безопУк(кисть));
    }

    //---------------------------------------------------------------------

    export проц устЛогичФункцию(цел функц)
    {
        wxWindowDC_SetLogicalFunction(вхобъ, функц);
    }

    //---------------------------------------------------------------------

    export проц устППТекста(Цвет цвет)
    {
        wxWindowDC_SetTextForeground(вхобъ, ВизОбъект.безопУк(цвет));
    }

    //---------------------------------------------------------------------

    export проц устЗПТекста(Цвет цвет)
    {
        wxWindowDC_SetTextBackground(вхобъ, ВизОбъект.безопУк(цвет));
    }

    //---------------------------------------------------------------------

    export проц устРежимФона(цел режим)
    {
        wxWindowDC_SetBackgroundMode(вхобъ, режим);
    }

    //---------------------------------------------------------------------

    export проц устПалитру(Палитра палитра)
    {
        wxWindowDC_SetPalette(вхобъ, ВизОбъект.безопУк(палитра));
    }

    //---------------------------------------------------------------------

    export Размер дайПНД()//PPI = пикселей на дюйм (ПНД)
    {
        Размер рм;
        wxWindowDC_GetPPI(вхобъ, рм);
        return рм;
    }

    //---------------------------------------------------------------------

    export цел дайГлубину()
    {
        return wxWindowDC_GetDepth(вхобъ);
    }
}

//---------------------------------------------------------------------

//! \cond EXTERN
extern (C) ЦелУкз wxClientDC_ctor();
extern (C) ЦелУкз wxClientDC_ctor2(ЦелУкз окно);
//! \endcond

//---------------------------------------------------------------------


export class КУКлиента : КУОкна
{
    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    private this(ЦелУкз вхобъ, бул памСобств)
    {
        super(вхобъ);
        this.памСобств = памСобств;
    }

    export this()
    {
        this(wxClientDC_ctor(), да);
    }

    export this(Окно окно)
    {
        this(wxClientDC_ctor2(ВизОбъект.безопУк(окно)), да);
    }
}

//---------------------------------------------------------------------

//! \cond EXTERN
extern (C) ЦелУкз wxPaintDC_ctor();
extern (C) ЦелУкз wxPaintDC_ctor2(ЦелУкз окно);
//! \endcond

//---------------------------------------------------------------------

export class КУРисования : КУОкна
{
    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    private this(ЦелУкз вхобъ, бул памСобств)
    {
        super(вхобъ);
        this.памСобств = памСобств;
    }

    export this()
    {
        this(wxPaintDC_ctor(), да);
    }

    export this(Окно окно)
    {
        this(wxPaintDC_ctor2(ВизОбъект.безопУк(окно)), да);
    }
}
