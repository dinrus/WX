// TODO:	Изменить обработку удаления ДатчиковСобытий. Если датчик
//		удаляется, а потом добавляется повторно, он не должен добавляться в конец,
// а именно в ту же самую позицию среди датчиков. Это благодаря ДаннымСобКлиента,
//		которые получает прокси события...

module wx.EvtHandler;
public import wx.common;
public import wx.Event;
public import wx.TaskBarIcon;
private import wx.App;

alias проц delegate(Объект отправитель, Событие e) ДатчикСобытий;

//! \cond VERSION
version(WXD_STYLEDTEXTCTRL)
//! \endcond
public import wx.StyledTextCtrl;

//---------------------------------------------------------------------

export class СокетДатчик
{
    private ДатчикСобытий привДатчик;
    private ВизОбъект привВладелец;
    private цел привТипСобытия;
    private бул активен_п;

    export this( ДатчикСобытий датчик, ВизОбъект владелец, цел типСобытия )
    {
        this.привДатчик = датчик;
        this.привВладелец = владелец;
        this.привТипСобытия = типСобытия;
        активен_п = да;
    }
	
	export ДатчикСобытий датчик(Объект отправитель = пусто, Событие e = пусто)
	{
	if( отправитель !is пусто && e !is пусто ) this.привДатчик(отправитель, e);
	return this.привДатчик;
	}
	
    export ВизОбъект владелец(ВизОбъект влад = пусто)
	{	
	if( влад !is пусто) this.привВладелец = влад;
	return this.привВладелец;
	}
	
    export цел типСобытия(цел типСоб = цел.init)
	{
	if( типСоб != цел.init) this.привТипСобытия = типСоб;
	return this.привТипСобытия;
	}
	
    export бул активен(бул данет = нет)
	{
	if( данет != this.активен_п) this.активен_п = данет;
	return this.активен_п;
	}
	
}

//---------------------------------------------------------------------

//! \cond EXTERN
extern (C)
{
    alias проц function(ОбработчикСоб объ, ЦелУкз Событие, цел иДатчик) ДелегатМаршалингаСоб;
}

export extern(C) struct ДанныеСобКлиента
{
export extern(C):
    ДелегатМаршалингаСоб датчик;
    ВизОбъект объ;
};

//		extern (C) {
//		alias проц function() ObjectDeletedHandler;
//		}
//
//		public ObjectDeletedHandler ObjectDeleted;


extern (C) проц wxEvtHandler_proxy(ЦелУкз сам, ДанныеСобКлиента* данные);
extern (C) проц wxEvtHandler_Connect(ЦелУкз сам, цел типСоб, цел ид, цел последнид, цел иДатчик);

extern (C) бул wxEvtHandler_ProcessEvent(ЦелУкз сам, ЦелУкз соб);

extern (C) проц wxEvtHandler_AddPendingEvent(ЦелУкз сам, ЦелУкз соб);
//! \endcond

///////////////

static export extern (C) проц staticMarshalEvent(ОбработчикСоб объ, ЦелУкз событие, цел иДатчик)
{
	объ.маршализуйСобытие(событие, иДатчик);
}


/// Класс, обрабатывающий события, получаемые от оконной системы.
/// Окно (и, следовательно, все оконные классы) происходит от этого
/// класса.
export class ОбработчикСоб : ВизОбъект
{
    private СокетДатчик[] датчики;
    extern(C) extern ДанныеСобКлиента данные;
    // Здесь хранятся жёсткие ссылки на обработчики событий, так как wxWidgets
    // будут их очищать.
    private static ОбработчикСоб[ЦелУкз] обработчикиСоб;
	
    //---------------------------------------------------------------------
    export this(ЦелУкз объ)
    {
        super(объ);

        данные.объ = this;
        данные.датчик = &staticMarshalEvent;
	//	synchronized (typeid(ОбработчикСоб))
     //   {
            wxEvtHandler_proxy(объ, &данные);
			
	    debug asm { //делаем точку останова в этом месте!!!
		  int 3;
		  }
            добавьДатчикСобытий(Событие.Тип.СОБ_ОБЪЕКТ_УДАЛЁН, &поУдалениюОбъекта);
            добавьОбработчикСоб(this);
		//}
    }

    //---------------------------------------------------------------------

    export ~this()
    {
        удалиОбработчикСоб(м_вхобъ);
    }

    //---------------------------------------------------------------------

    export проц добавьДатчикКоманд(цел типСобытия, цел ид, ДатчикСобытий датчик)
    {
        добавьДатчикДиапазонаКоманд(типСобытия, ид, -1, датчик);
    }

    export проц добавьДатчикКоманд(цел типСобытия, цел ид, ДатчикСобытий датчик, ВизОбъект владелец)
    {
        добавьДатчикДиапазонаКоманд(типСобытия, ид, -1, датчик, владелец);
    }

    //---------------------------------------------------------------------

    export проц добавьДатчикДиапазонаКоманд(цел типСобытия, цел ид, цел последнид, ДатчикСобытий датчик)
    {
        // Нужно сохранить ссылку на датчик, чтобы его не затронула сборка
        // мусора. Была проблема с передачей делегата датчика
        // в Си и обратно (.NET выводит ошибку рантайма, Mono
        // рушится), поэтому здесь передаётся индекс в массив датчиков.
          датчики ~= new СокетДатчик(датчик, пусто, типСобытия);
		  wxEvtHandler_Connect(this.вхобъ(), типСобытия, ид, последнид, датчики.length - 1);
    }

    export проц добавьДатчикДиапазонаКоманд(цел типСобытия, цел ид, цел последнид, ДатчикСобытий датчик, ВизОбъект владелец)
    {
        // Требуется сохранить ссылку на датчик, чтобы его не затронула
        // сборка мусора. Вместо передачи делегата датчика
        // в Си и обратно (.NET выводит ошибку рантайма, Mono
        // рушится), здесь передаётся индекс в массив датчиков.

        // Сначала проверяем, есть ли уже этот датчик в массиве датчиков.
        // Такое бывает, если вызывается метод удалиОбработчик.
        // Если он там, то просто ставим, что активен, и делаем возврат.

        foreach( СокетДатчик сд; датчики )
        {
            if ( сд.владелец is владелец && сд.датчик == датчик && сд.типСобытия == типСобытия )
            {
                сд.активен(да);
            }
        }

        датчики ~= new СокетДатчик(датчик, владелец, типСобытия);
        wxEvtHandler_Connect(this.вхобъ(), типСобытия, ид, последнид, датчики.length - 1);
    }

    //---------------------------------------------------------------------

    export проц добавьДатчикСобытий(цел типСобытия, ДатчикСобытий датчик)
    {
        добавьДатчикДиапазонаКоманд(типСобытия, -1, -1, датчик);
    }

   export проц добавьДатчикСобытий(цел типСобытия, ДатчикСобытий датчик, ВизОбъект владелец)
    {
        добавьДатчикДиапазонаКоманд(типСобытия, -1, -1, датчик, владелец);
    }

    //---------------------------------------------------------------------

    export проц добавьДатчикМеню(цел ид, ДатчикСобытий датчик)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_МЕНЮ_ВЫБРАНО, ид, датчик);
    }

    export проц добавьДатчикМеню(цел ид, ДатчикСобытий датчик, ВизОбъект владелец)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_МЕНЮ_ВЫБРАНО, ид, датчик, владелец);
    }

    //---------------------------------------------------------------------

    export бул обработайСобытие(Событие соб)
    {
        return wxEvtHandler_ProcessEvent(вхобъ, ВизОбъект.безопУк(соб));
    }

    //---------------------------------------------------------------------
    // Этот метод не выполняет реального дисконнекта, а только ставит его флаг "активен"
    // в "нет", если находит этот датчик в массиве датчиков.
    // Метод "маршализуйСобытие" после этого перестаёт вызывать этот датчик.

    export бул удалиОбработчик(ДатчикСобытий датчик, ВизОбъект владелец)
    {
        foreach( СокетДатчик сд; датчики )
        {
            if ( сд.датчик == датчик && сд.владелец is владелец && сд.активен )
            {
                сд.активен(нет);
                return да;
            }
        }

        return нет;
    }

    //---------------------------------------------------------------------

    export проц добавьОчередноеСобытие(Событие соб)
    {
        wxEvtHandler_AddPendingEvent(м_вхобъ, ВизОбъект.безопУк(соб));
    }

    //---------------------------------------------------------------------

    // Все отслеживаемые события получаем здесь. Сначала код события картируется в
    // действительный тип Событие, а затем вызывается вставка датчика ДатчикСобытий.

    export проц маршализуйСобытие(ЦелУкз событие, цел иДатчик)
    {
        // Создаём соответствующий обмотчик для объекта события.
        assert(событие!=ЦелУкз.init);

        Событие e = Событие.создайИз(событие);

        // Отправляем его в зарегистрированный датчик.
        СокетДатчик датчик = датчики[иДатчик];

        // Просто итерируем по списку, если датчик.владелец != пусто.
        // Только новая система событий сможет обработать более одного ДатчикСобытий,
        // так как этот ДатчикСобытий подключается через его владельца, а не через
        // Рамка, Диалог и т.д...
        try
        {
            if ( датчик.владелец )
            {
                цел i = 0;
                foreach ( СокетДатчик сд; датчики )
                {
                    // Продолжаем, если датчик равен сд, так как он будет ниже обработан.
                    if ( датчик == сд ) continue;

                    // Если в списке есть такой же объект с таким же
                    // типСобытия, его датчик вызывается тоже.
                    if ( сд.владелец )
                    {
                        if ( сд.владелец is датчик.владелец && сд.типСобытия == датчик.типСобытия )
                        {
                            if ( сд.активен ) сд.датчик(this, e);
                        }
                    }
                }
            }

            if ( датчик.активен ) датчик.датчик(this, e);
        }
        catch(Исключение e)
        {
            Приложение.дайПриложение().ловиИскл(e);
            Приложение.дайПриложение().выйдиИзГлавнЦикла();
        }
    }

    //---------------------------------------------------------------------

    // Этот обработчик вызыватся при каждом удалении ассоциированного с объектом
	// экземпляра C++, после чего можно очистить все ссылки на него в Динрусе.

    export /*static*/ проц поУдалениюОбъекта(Объект отправитель, Событие соб)
    {
        ОбработчикСоб evthandler = cast(ОбработчикСоб) отправитель;

//			if ( evthandler.ObjectDeleted )
//				evthandler.ObjectDeleted();

        evthandler.удалиОбработчикСоб(соб.целУкзСобытия);
    }

    //---------------------------------------------------------------------

    export /*static*/ проц добавьОбработчикСоб(ОбработчикСоб eh)
    {
        if (eh.м_вхобъ != ЦелУкз.init && !(eh.м_вхобъ in обработчикиСоб))
        {
            обработчикиСоб[eh.м_вхобъ] = eh;
        }
    }

    export /*static*/ проц удалиОбработчикСоб(ЦелУкз укз)
    {
        if ( укз != ЦелУкз.init)
        {
            обработчикиСоб.remove(укз);
            удалиОбъект(укз);
            укз = ЦелУкз.init;
        }
    }

    //---------------------------------------------------------------------

    export проц собРазмер(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_РАЗМЕР, дтчк);
    }
    export проц собЗакрой(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ЗАКРОЙ_ОКНО, дтчк);
    }
    export проц собРисование(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_РИСОВАНИЕ, дтчк);
    }
    export проц собСотриФон(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СОТРИ_ФОН, дтчк);
    }
    export проц собБездействие(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_БЕЗДЕЙСТВИЕ, дтчк);
    }
    export проц собДвигай(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ДВИГАЙ, дтчк);
    }
    export проц собСокет(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СОКЕТ, дтчк);
    }
    export проц собРасфокус(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_РАСФОКУС, дтчк);
    }
    export проц собУстФокус(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_УСТ_ФОКУС, дтчк);
    }

    export проц собМышь(ДатчикСобытий дтчк)
    {
        собВходВОкно(дтчк);
        собВыходИзОкна(дтчк);

        собЛеваяВнизу(дтчк);
        собПраваяВнизу(дтчк);
        собСредняяВнизу(дтчк);

        собЛеваяДНажата(дтчк);
        собПраваяДНажата(дтчк);
        собСредняяДНажата(дтчк);

        собКолесоМыши(дтчк);

        собДвижение(дтчк);

        собЛеваяВверху(дтчк);
        собПраваяВверху(дтчк);
        собСредняяВверху(дтчк);
    }

    export проц собВходВОкно(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ВХОД_ОКНО, дтчк);
    }
    export проц собВыходИзОкна(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ВЫХОД_ОКНО, дтчк);
    }

    export проц собЛеваяВнизу(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ЛЕВАЯ_ВНИЗУ, дтчк);
    }
    export проц собПраваяВнизу(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ПРАВАЯ_ВНИЗУ, дтчк);
    }
    export проц собСредняяВнизу(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СРЕДНЯЯ_ВНИЗУ, дтчк);
    }

    export проц собЛеваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ЛЕВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собПраваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ПРАВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собСредняяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СРЕДНЯЯ_ДНАЖАТА, дтчк);
    }

    export проц собКолесоМыши(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_КОЛЕСО_МЫШИ, дтчк);
    }

    export проц собДвижение(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ДВИЖЕНИЕ, дтчк);
    }

    export проц собЛеваяВверху(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ЛЕВАЯ_ВВЕРХУ, дтчк);
    }
    export проц собПраваяВверху(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ПРАВАЯ_ВВЕРХУ, дтчк);
    }
    export проц собСредняяВверху(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СРЕДНЯЯ_ВВЕРХУ, дтчк);
    }

    export проц собОбновиИП(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_ОБНОВИ_ИП, ид, дтчк);
    }
    export проц собТаймер(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_ТАЙМЕР, ид, дтчк);
    }
    export проц собМеню(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_МЕНЮ_ВЫБРАНО, ид, дтчк);
    }
    export проц собМенюДиапазон(цел ид, цел последнид, ДатчикСобытий дтчк)
    {
        добавьДатчикДиапазонаКоманд(Событие.Тип.СОБ_КОМАНДА_МЕНЮ_ВЫБРАНО, ид, последнид, дтчк);
    }
    export проц собКнопка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_КНОПКА_НАЖАТА, ид, дтчк);
    }
    export проц собЧекбокс(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЧЕКБОКС_НАЖАТ, ид, дтчк);
    }
    export проц собЛистбокс(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЛИСТБОКС_ВЫБРАН, ид, дтчк);
    }
    export проц собЛистбоксДНажат(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЛИСТБОКС_ДВАЖДЫ_НАЖАТ, ид, дтчк);
    }
    export проц собВыбор(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ВЫБОР_ВЫБРАН, ид, дтчк);
    }
    export проц собКомбобокс(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_КОМБОБОКС_ВЫБРАН, ид, дтчк);
    }
    export проц собТекст(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ТЕКСТ_ОБНОВЛЁН, ид, дтчк);
    }
    export проц собТекстВвод(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ТЕКСТ_ВВОД, ид, дтчк);
    }
    export проц собРадиобокс(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_РАДИОБОКС_ВЫБРАН, ид, дтчк);
    }
    export проц собРадиоКнопка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_РАДИОКНОПКА_ВЫБРАНА, ид, дтчк);
    }
    export проц собСлайдер(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ПОЛЗУНОК_ОБНОВЛЁН, ид, дтчк);
    }
    export проц собСпинктрл(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИНКТРЛ_ОБНОВЛЁН, ид, дтчк);
    }
    export проц собСпинВверху(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_СКРОЛЛ_СТРОКОЙ_ВЫШЕ, ид, дтчк);
    }
    export проц собСпинВнизу(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_СКРОЛЛ_СТРОКОЙ_НИЖЕ, ид, дтчк);
    }
    export проц собСпин(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_СКРОЛЛ_ТУМБТРЭК, ид, дтчк);
    }
    export проц собПереключатель(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ПЕРЕКЛЮЧАТЕЛЬ_НАЖАТ, ид, дтчк);
    }

    export проц собКлавишаВнизу(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_КЛАВИША_ВНИЗУ, дтчк);
    }
    export проц собКлавишаВверху(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_КЛАВИША_ВВЕРХУ, дтчк);
    }
    export проц собСимвол(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СИМВ, дтчк);
    }

    export проц собКалендарьВыдИзменено(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КАЛЕНДАРЬ_ВЫД_ИЗМЕНЕНО, ид, дтчк);
    }
    export проц собКалендарьДень(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КАЛЕНДАРЬ_ДЕНЬ_ИЗМЕНЁН, ид, дтчк);
    }
    export проц собКалендарьМесяц(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КАЛЕНДАРЬ_МЕСЯЦ_ИЗМЕНЁН, ид, дтчк);
    }
    export проц собКалендарьГод(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КАЛЕНДАРЬ_ГОД_ИЗМЕНЁН, ид, дтчк);
    }
    export проц собКалендарьДНажат(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КАЛЕНДАРЬ_ДВАЖДЫ_НАЖАТ, ид, дтчк);
    }
    export проц собКалендарьДеньНеделиНажат(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КАЛЕНДАРЬ_ДЕНЬНЕДЕЛИ_НАЖАТ, ид, дтчк);
    }

    export проц собНайди(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НАЙДИ, ид, дтчк);
    }
    export проц собНайдиСледщ(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НАЙДИ_СЛЕДЩ, ид, дтчк);
    }
    export проц собНайдиЗамени(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НАЙДИ_ЗАМЕНИ, ид, дтчк);
    }
    export проц собНайдиЗамениВсе(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НАЙДИ_ЗАМЕНИ_ВСЕ, ид, дтчк);
    }
    export проц собНайдиЗакрой(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НАЙДИ_ЗАКРЫТЬ, ид, дтчк);
    }

    export проц собДеревоНачалоТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_НАЧАЛО_ТЯГА, ид, дтчк);
    }
    export проц собДеревоНачалоПТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_НАЧАЛО_ПТЯГА, ид, дтчк);
    }
    export проц собДеревоНачниРедактированиеЯрлыка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_НАЧАЛО_РЕДАКТИРОВАНИЯ_ЯРЛЫКА, ид, дтчк);
    }
    export проц собДеревоЗавершиРедактированиеЯрлыка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_КОНЕЦ_РЕДАКТИРОВАНИЯ_ЯРЛЫКА, ид, дтчк);
    }
    export проц собДеревоУдалиЭлт(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_УДАЛИТЬ_ЭЛЕМЕНТ, ид, дтчк);
    }
    export проц собДеревоДайИнфо(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ДАТЬ_ИНФО, ид, дтчк);
    }
    export проц собДеревоУстИнфо(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_УСТ_ИНФО, ид, дтчк);
    }
    export проц собДеревоЭлтРазвёрнут(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ЭЛТ_РАЗВЁРНУТ, ид, дтчк);
    }
    export проц собДеревоЭлтРазворачивается(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ЭЛТ_РАЗВОРАЧИВАЕТСЯ, ид, дтчк);
    }
    export проц собДеревоЭлтСвёрнут(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ЭЛТ_СВЁРНУТ, ид, дтчк);
    }
    export проц собДеревоЭлтСворачивается(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ЭЛТ_СВОРАЧИВАЕТСЯ, ид, дтчк);
    }
    export проц собДеревоВыдИзменено(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ВЫД_ИЗМЕНЕНО, ид, дтчк);
    }
    export проц собДеревоВыдИзменяется(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ВЫД_ИЗМЕНЯЕТСЯ, ид, дтчк);
    }
    export проц собДеревоКлавишаВнизу(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_КЛАВИША_ВНИЗУ, ид, дтчк);
    }
    export проц собДеревоЭлтАктивирован(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ЭЛТ_АКТИВИРОВАН, ид, дтчк);
    }
    export проц собДеревоЭлтПраваяНажата(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_ПРАВАЯ_НАЖАТА, ид, дтчк);
    }
    export проц собДеревоЭлтСредняяНажата(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_СРЕДНЯЯ_НАЖАТА, ид, дтчк);
    }
    export проц собДеревоКонецТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ДЕРЕВО_КОНЕЦ_ТЯГА, ид, дтчк);
    }

    export проц собСписокНачалоТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_НАЧАЛО_ТЯГА, ид, дтчк);
    }
    export проц собСписокНачалоПТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_НАЧАЛО_ПТЯГА, ид, дтчк);
    }
    export проц собСписокНачниРедактированиеЯрлыка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_НАЧАЛО_РЕДАКТИРОВАНИЯ_ЯРЛЫКА, ид, дтчк);
    }
    export проц собСписокЗавершиРедактированиеЯрлыка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КОНЕЦ_РЕДАКТИРОВАНИЯ_ЯРЛЫКА, ид, дтчк);
    }
    export проц собСписокУдалиЭлт(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_УДАЛИТЬ_ЭЛТ, ид, дтчк);
    }
    export проц собСписокУдалиВсеЭлты(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_УДАЛИТЬ_ВСЕ_ЭЛТЫ, ид, дтчк);
    }
    export проц собСписокДайИнфо(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ДАТЬ_ИНФО, ид, дтчк);
    }
    export проц собСписокУстИнфо(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_УСТ_ИНФО, ид, дтчк);
    }
    export проц собСписокЭлтВыделен(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ЭЛТ_ВЫДЕЛЕН, ид, дтчк);
    }
    export проц собСписокЭлтДеселектирован(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ЭЛТ_ДЕСЕЛЕКТИРОВАН, ид, дтчк);
    }
    export проц собСписокЭлтАктивирован(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ЭЛТ_АКТИВИРОВАН, ид, дтчк);
    }
    export проц собСписокЭлтФокусирован(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ЭЛТ_ФОКУСИРОВАН, ид, дтчк);
    }
    export проц собСписокЭлтСредняяНажата(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ЭЛТ_СРЕДНЯЯ_НАЖАТА, ид, дтчк);
    }
    export проц собСписокЭлтПраваяНажата(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ЭЛТ_ПРАВАЯ_НАЖАТА, ид, дтчк);
    }
    export проц собСписокКлавишаВнизу(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КЛАВИША_ВНИЗУ, ид, дтчк);
    }
    export проц собСписокВставитьЭлт(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_ВСТАВИТЬ_ЭЛТ, ид, дтчк);
    }
    export проц собСписокКолНажата(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КОЛ_НАЖАТА, ид, дтчк);
    }
    export проц собСписокКолПраваяНажата(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КОЛ_ПРАВАЯ_НАЖАТА, ид, дтчк);
    }
    export проц собСписокКолНачалоТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КОЛ_НАЧАЛО_ТЯГА, ид, дтчк);
    }
    export проц собСписокКолТяг(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КОЛ_ТЯГ, ид, дтчк);
    }
    export проц собСписокКолКонецТяга(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КОЛ_КОНЕЦ_ТЯГА, ид, дтчк);
    }
    export проц собСписокКэшХинт(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СПИСОК_КЭШ_ХИНТ, ид, дтчк);
    }

    export проц собНоутбукСтраницаИзменена(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НОУТБУК_СТРАНИЦА_ИЗМЕНЕНА, ид, дтчк);
    }
    export проц собНоутбукСтраницаИзменяется(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_НОУТБУК_СТРАНИЦА_ИЗМЕНЯЕТСЯ, ид, дтчк);
    }

    export проц собЛистбукСтраницаИзменена(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СТРАНИЦА_ЛИСТБУКА_ИЗМЕНЕНА, ид, дтчк);
    }
    export проц собЛистбукСтраницаИзменяется(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_СТРАНИЦА_ЛИСТБУКА_ИЗМЕНЯЕТСЯ, ид, дтчк);
    }

    version(__WXMSW__)
    {
        export проц собВкладкаВыдИзменено(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ВКЛАДКА_ВЫД_ИЗМЕНЕНО, ид, дтчк);
        }
        export проц собВкладкаВыдИзменяется(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ВКЛАДКА_ВЫД_ИЗМЕНЯЕТСЯ, ид, дтчк);
        }
    }
    export проц собСеткаЯчейкаЛеваяНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯЧЕЙКА_ЛЕВАЯ_НАЖАТА, дтчк);
    }
    export проц собСеткаЯчейкаПраваяНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯЧЕЙКА_ПРАВАЯ_НАЖАТА, дтчк);
    }
    export проц собСеткаЯчейкаЛеваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯЧЕЙКА_ЛЕВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собСеткаЯчейкаПраваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯЧЕЙКА_ПРАВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собСеткаЯрлыкЛеваяНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯРЛЫК_ЛЕВАЯ_НАЖАТА, дтчк);
    }
    export проц собСеткаЯрлыкПраваяНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯРЛЫК_ПРАВАЯ_НАЖАТА, дтчк);
    }
    export проц собСеткаЯрлыкЛеваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯРЛЫК_ЛЕВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собСеткаЯрлыкПраваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯРЛЫК_ПРАВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собСеткаРядРазмер(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_РЯД_РАЗМЕР, дтчк);
    }
    export проц собСеткаКолонкаРазмер(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_КОЛОНКА_РАЗМЕР, дтчк);
    }
    export проц собСеткаДиапазонВыделение(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ДИАПАЗОН_ВЫДЕЛЕНИЕ, дтчк);
    }
    export проц собСеткаЯчейкаИзменение(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ЯЧЕЙКА_ИЗМЕНЕНИЕ, дтчк);
    }
    export проц собСеткаВыделитьЯчейку(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_ВЫДЕЛИТЬ_ЯЧЕЙКУ, дтчк);
    }
    export проц собСеткаРедакторПоказан(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_РЕДАКТОР_ПОКАЗАН, дтчк);
    }
    export проц собСеткаРедакторСкрыт(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_РЕДАКТОР_СКРЫТ, дтчк);
    }
    export проц собСеткаРедакторСоздан(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СЕТКА_РЕДАКТОР_СОЗДАН, дтчк);
    }

    export проц собАктивируй(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_АКТИВИРУЙ, дтчк);
    }

    export проц собДисплейИзменён(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ДИСПЛЕЙ_ИЗМЕНЁН, дтчк);
    }

    export проц собСашПеретянут(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_САШ_ПЕРЕТЯНУТ, ид, дтчк);
    }
    export проц собСашПеретянутДиапазон(цел ид, цел последнид, ДатчикСобытий дтчк)
    {
        добавьДатчикДиапазонаКоманд(Событие.Тип.СОБ_САШ_ПЕРЕТЯНУТ, ид, последнид, дтчк);
    }

    export проц собЗапросИнфОВыкладке(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ЗАПРОС_ИНФО_ВЫКЛАДКИ, дтчк);
    }
    export проц собРассчётВыкладки(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_РАССЧЁТ_ВЫКЛАДКИ, дтчк);
    }

    export проц собЧекЛистбокс(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЛИСТБОКС_ТОГГЛ, ид, дтчк);
    }

    export проц собКонтекстноеМеню(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_КОНТЕКСТ_МЕНЮ, дтчк);
    }

    export проц собСисЦветИзменён(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_СИС_ЦВЕТ_ИЗМЕНЁН, дтчк);
    }

    export проц собЗапросНовойПалитры(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ЗАПРОС_НОВОЙ_ПАЛИТРЫ, дтчк);
    }

    export проц собПалитраИзменена(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ПАЛИТРА_ИЗМЕНЕНА, дтчк);
    }

    export проц собИницДиалог(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ИНИЦ_ДИАЛОГ, дтчк);
    }

    export проц собПеремер(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ПЕРЕМЕР, дтчк);
    }

    export проц собПеремещение(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(Событие.Тип.СОБ_ПЕРЕМЕЩЕНИЕ, дтчк);
    }

    export проц собСправка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_СПРАВКА, ид, дтчк);
    }

    export проц собПодробнаяСправка(цел ид, ДатчикСобытий дтчк)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_ПОДРОБНАЯ_СПРАВКА, ид, дтчк);
    }


//! \cond VERSION
    version(WXD_STYLEDTEXTCTRL)
    {
//! \endcond

        // СтильныйТекстКтрл specific events

        export проц собСТКИзменение(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ИЗМЕНЕНИЕ, ид, дтчк);
        }
        export проц собСТКНуженСтиль(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_НУЖНЫЙСТИЛЬ, ид, дтчк);
        }
        export проц собСТКДобавленСим(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ДОБАВЛЕНСИМ, ид, дтчк);
        }

        export проц собСТКДостигнутаТочкаСохранения(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ДОСТИГНУТАТОЧКАСОХРАНЕНИЯ, ид, дтчк);
        }
        export проц собСТКПокинутаТочкаСохранения(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ПОКИНУТАТОЧКАСОХРАНЕНИЯ, ид, дтчк);
        }
        export проц EVT_STC_ROMODIFYATTEMPT(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_ROMODIFYATTEMPT, ид, дтчк);
        }

        export проц собСТККлавиша(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_КЛАВИША, ид, дтчк);
        }
        export проц собСТКДНажатие(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ДНАЖАТИЕ, ид, дтчк);
        }
        export проц собСТКОбновитьИП(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ОБНОВИТЬИП, ид, дтчк);
        }
        export проц собСТКМодифицирован(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_МОДИФИЦИРОВАН, ид, дтчк);
        }
        export проц собСТКЗаписьМакроса(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ЗАПИСЬМАКРОСА, ид, дтчк);
        }
        export проц собСТКНажатМаржин(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_НАЖАТМАРЖИН, ид, дтчк);
        }
        export проц собСТКНуженПоказ(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_НУЖЕНПОКАЗ, ид, дтчк);
        }
        //export проц EVT_STC_POSCHANGED(цел ид, ДатчикСобытий дтчк)
        //	{ добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_POSCHANGED, ид, дтчк); }
        export проц собСТКОтрисован(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ОТРИСОВАН, ид, дтчк);
        }
        export проц собСТКВыделениеПользователемСписка(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ВЫДЕЛЕНИЕПОЛЬЗОВАТЕЛЕМСПИСКА, ид, дтчк);
        }
        export проц собСТКБрошенУИР(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_БРОШЕНУИР, ид, дтчк);
        }

        export проц собСТКДвеллСтарт(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_DWELLSTART, ид, дтчк);
        }
        export проц собСТКДвеллСтоп(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_DWELLEND, ид, дтчк);
        }

        export проц собСТКНачалоТяга(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_НАЧАЛО_ТЯГА, ид, дтчк);
        }
        export проц собСТККонецТяга(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_КОНЕЦ_ТЯГА, ид, дтчк);
        }
        export проц собСТКДелайБрос(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_БРОСЬ_ДРОП, ид, дтчк);
        }

        export проц собСТКЗум(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.СОБ_СТК_ЗУМ, ид, дтчк);
        }

        export проц собСТКХотспотНажат(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_HOTSPOT_CLICK, ид, дтчк);
        }
        export проц собСТКХотспотДНажат(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_HOTSPOT_DCLICK, ид, дтчк);
        }

        export проц собСТККоллтипНажат(цел ид, ДатчикСобытий дтчк)
        {
            добавьДатчикКоманд(СтильныйТекстКтрл.wxEVT_STC_CALLTIP_CLICK, ид, дтчк);
        }
//! \cond VERSION
    } // version(WXD_STYLEDTEXTCTRL)
//! \endcond

    export проц собТаскбарДвижение(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ДВИЖЕНИЕ, дтчк);
    }
    export проц собТаскбарЛеваяВнизу(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ЛЕВАЯ_ВНИЗУ, дтчк);
    }
    export проц собТаскбарЛеваяВверху(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ЛЕВАЯ_ВВЕРХУ, дтчк);
    }
    export проц собТаскбарПраваяВнизу(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ПРАВАЯ_ВНИЗУ, дтчк);
    }
    export проц собТаскбарПраваяВверху(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ПРАВАЯ_ВВЕРХУ, дтчк);
    }
    export проц собТаскбарЛеваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ЛЕВАЯ_ДНАЖАТА, дтчк);
    }
    export проц собТаскбарПраваяДНажата(ДатчикСобытий дтчк)
    {
        добавьДатчикСобытий(ИконкаТаскБара.СОБ_ТАСКБАР_ПРАВАЯ_ДНАЖАТА, дтчк);
    }

    export static ВизОбъект Нов(ЦелУкз укз)
    {
        return new ОбработчикСоб(укз);
    }
}
