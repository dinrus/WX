module wx.Frame;
public import wx.common;
public import wx.Window;
public import wx.ToolBar;
public import wx.MenuBar;
public import wx.StatusBar;
public import wx.Icon;

//! \cond EXTERN
extern (C) ЦелУкз wxFrame_ctor();
extern (C) бул   wxFrame_Create(ЦелУкз сам, ЦелУкз родитель, цел ид, ткст титул, inout Точка поз, inout Размер размер, бцел стиль, ткст имя);

extern (C) ЦелУкз wxFrame_CreateStatusBar(ЦелУкз сам, цел число, бцел стиль, цел ид, ткст имя);

extern (C) проц   wxFrame_SendSizeEvent(ЦелУкз сам);

extern (C) проц   wxFrame_SetIcon(ЦелУкз сам, ЦелУкз пиктограмма);

extern (C) проц   wxFrame_SetMenuBar(ЦелУкз сам, ЦелУкз менюБар);
extern (C) ЦелУкз wxFrame_GetMenuBar(ЦелУкз сам);

extern (C) проц   wxFrame_SetStatusText(ЦелУкз сам, ткст текст, цел число);

extern (C) ЦелУкз wxFrame_CreateToolBar(ЦелУкз сам, бцел стиль, цел ид, ткст имя);
extern (C) ЦелУкз wxFrame_GetToolBar(ЦелУкз сам);
extern (C) проц   wxFrame_SetToolBar(ЦелУкз сам, ЦелУкз toolbar);

extern (C) бул   wxFrame_ShowFullScreen(ЦелУкз сам, бул показ, бцел стиль);
extern (C) бул   wxFrame_IsFullScreen(ЦелУкз сам);

extern (C) ЦелУкз wxFrame_GetStatusBar(ЦелУкз вхобъ);
extern (C) проц   wxFrame_SetStatusBar(ЦелУкз вхобъ, ЦелУкз statusbar);

extern (C) цел    wxFrame_GetStatusBarPane(ЦелУкз вхобъ);
extern (C) проц   wxFrame_SetStatusBarPane(ЦелУкз вхобъ, цел ч);

extern (C) проц   wxFrame_SetStatusWidths(ЦелУкз сам, цел ч, цел* ширины);

extern (C) проц   wxFrame_Iconize(ЦелУкз вхобъ, бул iconize);
extern (C) бул   wxFrame_IsIconized(ЦелУкз вхобъ);

extern (C) проц   wxFrame_Maximize(ЦелУкз вхобъ, бул maximize);
extern (C) бул   wxFrame_IsMaximized(ЦелУкз вхобъ);

//extern (C) бул   wxFrame_SetShape(ЦелУкз сам, ЦелУкз регион);

extern (C) проц   wxFrame_GetClientAreaOrigin(ЦелУкз сам, inout Точка тчк);
//! \endcond

//---------------------------------------------------------------------


/// A рамка is a окно whose Размер and позиция can (usually) be
/// changed by the user. It usually есть thick borders and a титул bar,
/// and can optionally contain a меню bar, toolbar and status bar.
/// A рамка can contain any окно that is not a рамка or dialog.
export class Рамка : Окно
{
    public const цел ПОЛНЭКР_БЕЗМЕНЮБАРА   = 0x0001;
    public const цел ПОЛНЭКР_БЕЗТУЛБАРА   = 0x0002;
    public const цел ПОЛНЭКР_БЕЗСТАТУСБАРА = 0x0004;
    public const цел ПОЛНЭКР_БЕЗБОРДЮРА    = 0x0008;
    public const цел ПОЛНЭКР_БЕЗКАПШН   = 0x0010;
    public const цел ПОЛНЭКР_ВСЕ         =
        ПОЛНЭКР_БЕЗМЕНЮБАРА | ПОЛНЭКР_БЕЗТУЛБАРА |
        ПОЛНЭКР_БЕЗСТАТУСБАРА | ПОЛНЭКР_БЕЗБОРДЮРА |
        ПОЛНЭКР_БЕЗКАПШН;

    //-----------------------------------------------------------------------------
    const ткст стрИмениРамки="рамка";

    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    export this()
    {
        this(wxFrame_ctor());
    }

    export this(Окно родитель, цел ид, ткст титул, Точка поз=ДЕФПОЗ, Размер размер=ДЕФРАЗМ, цел стиль=ДЕФ_СТИЛЬ_РАМКИ, ткст имя=стрИмениРамки)
    {
        this(wxFrame_ctor());
        if (!создай(родитель, ид, титул, поз, размер, стиль, имя))
        {
            throw new ИсклНевернОперации("Не удалось создать Рамка");
        }
    }

    //---------------------------------------------------------------------
    // ctors with сам created ид

    export this(Окно родитель, ткст титул, Точка поз=ДЕФПОЗ, Размер размер=ДЕФРАЗМ, цел стиль=ДЕФ_СТИЛЬ_РАМКИ, ткст имя=стрИмениРамки)
    {
        this(родитель, Окно.уникИд, титул, поз, размер, стиль, имя);
    }

    //---------------------------------------------------------------------

    export бул создай(Окно родитель, цел ид, ткст титул, inout Точка поз, inout Размер размер, цел стиль, ткст имя)
    {
        return wxFrame_Create(вхобъ, ВизОбъект.безопУк(родитель), ид, титул, поз, размер, стиль, имя);
    }

    //---------------------------------------------------------------------

    // Helper constructors

    export this(ткст титул, Точка поз=ДЕФПОЗ, Размер размер=ДЕФРАЗМ, цел стиль=ДЕФ_СТИЛЬ_РАМКИ)
    {
        this(пусто, -1, титул, поз, размер, стиль);
    }

    //---------------------------------------------------------------------

    export бул покажиПолноэкранно(бул показ, цел стиль)
    {
        return wxFrame_ShowFullScreen(вхобъ, показ, cast(бцел)стиль);
    }

    export бул покажиПолноэкранно(бул показ)
    {
        return покажиПолноэкранно(показ, ПОЛНЭКР_ВСЕ);
    }

    export бул полноэкранна_ли()
    {
        return wxFrame_IsFullScreen(вхобъ);
    }

    //---------------------------------------------------------------------

    export СтрокаСостояния создайСтатусБар()
    {
        return создайСтатусБар(1, 0, -1, "статусБар");
    }

    export СтрокаСостояния создайСтатусБар(цел число)
    {
        return создайСтатусБар(число, 0, -1, "статусБар");
    }

    export СтрокаСостояния создайСтатусБар(цел число, цел стиль)
    {
        return создайСтатусБар(число, стиль, -1, "статусБар");
    }

    export СтрокаСостояния создайСтатусБар(цел число, цел стиль, цел ид)
    {
        return создайСтатусБар(число, стиль, ид, "статусБар");
    }

    export СтрокаСостояния создайСтатусБар(цел число, цел стиль, цел ид, ткст имя)
    {
        return new СтрокаСостояния(wxFrame_CreateStatusBar(вхобъ, число, cast(бцел)стиль, ид, имя));
    }

    export СтрокаСостояния статусБар()
    {
        return cast(СтрокаСостояния)найдиОбъект(wxFrame_GetStatusBar(вхобъ), &СтрокаСостояния.Нов);
    }
    export проц статусБар(СтрокаСостояния значение)
    {
        wxFrame_SetStatusBar(вхобъ, ВизОбъект.безопУк(значение));
    }

    export цел паноСтатусБара()
    {
        return wxFrame_GetStatusBarPane(вхобъ);
    }
    export проц паноСтатусБара(цел значение)
    {
        wxFrame_SetStatusBarPane(вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export проц шлиСобытиеРазмера()
    {
        wxFrame_SendSizeEvent(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц пиктограмма(Пиктограмма значение)
    {
        wxFrame_SetIcon(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export проц менюБар(МенюБар значение)
    {
        wxFrame_SetMenuBar(вхобъ, ВизОбъект.безопУк(значение));
        // добавить меню events...
        if (значение)
        {
            for ( цел i = 0; i < менюБар.счётМеню; ++i )
            {
                Меню меню = значение.дайМеню(i);
                меню.подключиСобытия(this);
            }
        }
    }
    export МенюБар менюБар()
    {
        return cast(МенюБар)найдиОбъект(wxFrame_GetMenuBar(вхобъ), &МенюБар.Нов);
    }

    //---------------------------------------------------------------------

    export проц текстСостояния(ткст значение)
    {
        устТекстСостояния(значение);
    }

    export проц устТекстСостояния(ткст текст)
    {
        устТекстСостояния(текст, 0);
    }

    export проц устТекстСостояния(ткст текст, цел число)
    {
        wxFrame_SetStatusText(вхобъ, текст, число);
    }

    //---------------------------------------------------------------------

    export проц шириныСтатуса(цел[] значение)
    {
        устШириныСтатуса(значение.length, значение);
    }

    export проц устШириныСтатуса(цел ч, цел[] ширины)
    {
        wxFrame_SetStatusWidths(вхобъ, ч, ширины.ptr);
    }

    //---------------------------------------------------------------------

    export Тулбар создайТулБар()
    {
        return создайТулБар(/*ПБордюр.*/БЕЗ_БОРДЮРА | Тулбар.ГОРИЗОНТАЛЬНЫЙ, -1, "toolBar");
    }
    export Тулбар создайТулБар(цел стиль)
    {
        return создайТулБар(стиль, -1, "toolBar");
    }
    export Тулбар создайТулБар(цел стиль, цел ид)
    {
        return создайТулБар(стиль, ид, "toolBar");
    }

    export Тулбар создайТулБар(цел стиль, цел ид, ткст имя)
    {
        return new Тулбар(wxFrame_CreateToolBar(вхобъ, cast(бцел)стиль, ид, имя));
    }

    export Тулбар тулБар()
    {
        return cast(Тулбар)найдиОбъект(wxFrame_GetToolBar(вхобъ));
    }
    export проц тулБар(Тулбар значение)
    {
        wxFrame_SetToolBar(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export бул иконирована()
    {
        return wxFrame_IsIconized(вхобъ);
    }
    export проц иконирована(бул значение)
    {
        wxFrame_Iconize(вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export бул максимирована()
    {
        return wxFrame_IsMaximized(вхобъ);
    }
    export проц максимирована(бул значение)
    {
        wxFrame_Maximize(вхобъ, значение);
    }

    //---------------------------------------------------------------------

    /*export бул УстShape(wx.Region регион)
    {
    	return wxFrame_SetShape(вхобъ, ВизОбъект.безопУк(регион));
    }*/

    //---------------------------------------------------------------------

    export override Точка исходнаяЗоныКлиента()
    {
        Точка тчк;
        wxFrame_GetClientAreaOrigin(вхобъ, тчк);
        return тчк;
    }


    override export  бул закрой()
    {
        return wxWindow_Close(вхобъ, нет);
    }

    override export  бул закрой(бул сила)
    {
        return wxWindow_Close(вхобъ, сила);
    }
}
