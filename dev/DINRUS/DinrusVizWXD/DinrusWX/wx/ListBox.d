module wx.ListBox;
public import wx.common;
public import wx.Control;
public import wx.ClientData;

//! \cond EXTERN
extern (C) ЦелУкз wxListBox_ctor();
extern (C) проц   wxListBox_dtor(ЦелУкз сам);
extern (C) проц   wxListBox_Clear(ЦелУкз сам);
extern (C) бул   wxListBox_Create(ЦелУкз сам, ЦелУкз родитель, цел ид, inout Точка поз, inout Размер размер, цел ч, ткст0 выборы, бцел стиль, ЦелУкз оценщик, ткст имя);
extern (C) проц   wxListBox_InsertText(ЦелУкз сам, ткст элт, цел поз);
extern (C) проц   wxListBox_InsertTextData(ЦелУкз сам, ткст элт, цел поз, ЦелУкз данные);
extern (C) проц   wxListBox_InsertTextClientData(ЦелУкз сам, ткст элт, цел поз, ЦелУкз данныеКлиента);
extern (C) проц   wxListBox_InsertItems(ЦелУкз сам, цел члоЭлтов, ткст0 элты, цел поз);
extern (C) проц   wxListBox_Set(ЦелУкз сам, цел ч, ткст0 элты, ЦелУкз данныеКлиента);
extern (C) проц   wxListBox_SetSelection(ЦелУкз сам, цел ч, бул выбрать);
extern (C) проц   wxListBox_Select(ЦелУкз сам, цел ч);
extern (C) проц   wxListBox_Deselect(ЦелУкз сам, цел ч);
extern (C) проц   wxListBox_DeselectAll(ЦелУкз сам, цел элтОставляемыйВыделенным);
extern (C) бул   wxListBox_SetStringSelection(ЦелУкз сам, ткст т, бул выбрать);
extern (C) ЦелУкз wxListBox_GetSelections(ЦелУкз сам);
extern (C) проц   wxListBox_SetFirstItem(ЦелУкз сам, цел ч);
extern (C) проц   wxListBox_SetFirstItemText(ЦелУкз сам, ткст т);
extern (C) бул   wxListBox_HasMultipleSelection(ЦелУкз сам);
extern (C) бул   wxListBox_IsSorted(ЦелУкз сам);
extern (C) проц   wxListBox_Command(ЦелУкз сам, ЦелУкз соб);
extern (C) бул   wxListBox_Selected(ЦелУкз сам, цел ч);
extern (C) цел    wxListBox_GetSelection(ЦелУкз сам);
extern (C) ЦелУкз wxListBox_GetStringSelection(ЦелУкз сам);
extern (C) проц   wxListBox_SetSingleString(ЦелУкз сам, цел ч, ткст т);
extern (C) ЦелУкз wxListBox_GetSingleString(ЦелУкз сам, цел ч);
extern (C) проц   wxListBox_Append(ЦелУкз сам, ткст элт);
extern (C) проц   wxListBox_AppendClientData(ЦелУкз сам, ткст элт, ЦелУкз данныеКлиента);
extern (C) проц   wxListBox_Delete(ЦелУкз сам, цел ч);
extern (C) цел    wxListBox_GetCount(ЦелУкз сам);
//! \endcond

//---------------------------------------------------------------------

export class ЛистБокс : Контрол
{
    enum
    {
        СОРТИРУЕМЫЙ             = 0x0010,
        ЕДИНИЧНЫЙ           = 0x0020,
        МНОЖЕСТВЕННЫЙ         = 0x0040,
        РАСШИРЕННЫЙ         = 0x0080,
        wxLB_OWNERDRAW        = 0x0100,
        wxLB_NEED_SB          = 0x0200,
        wxLB_ALWAYS_SB        = 0x0400,
        ГПРОКРУТКА          = ГПРОКРУТ,
        ЦЕЛ_ВЫСОТА       = 0x0800,
    }

    public const ткст СтрИмениЛистБокса = "listBox";
    //---------------------------------------------------------------------

    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    export this()
    {
        super(wxListBox_ctor());
    }

    export this(Окно родитель, цел ид, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ,
                ткст[] выборы = пусто, цел стиль = 0, Оценщик оценщик =пусто, ткст имя = СтрИмениЛистБокса)
    {
        super(wxListBox_ctor());
        if(!wxListBox_Create(вхобъ, ВизОбъект.безопУк(родитель), ид,
                             поз, размер, выборы.length, cast(ткст0) выборы.ptr, cast(бцел)стиль,
                             ВизОбъект.безопУк(оценщик), имя))
        {
            throw new ИсклНевернОперации("Не удалось создать ЛистБокс");
        }
    }

    export static ВизОбъект Нов(ЦелУкз вхобъ)
    {
        return new ЛистБокс(вхобъ);
    }

    //---------------------------------------------------------------------
    // ctors with сам created ид

    export this(Окно родитель, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ,
                ткст[] выборы = пусто, цел стиль = 0, Оценщик оценщик = пусто, ткст имя = СтрИмениЛистБокса)
    {
        this( родитель, Окно.уникИд, поз, размер, выборы, стиль, оценщик, имя);
    }

    //---------------------------------------------------------------------

    export бул создай(Окно родитель, цел ид, inout Точка поз, inout Размер размер, цел ч,
                       ткст[] выборы, цел стиль, Оценщик оценщик, ткст имя)
    {
        return wxListBox_Create(вхобъ, ВизОбъект.безопУк(родитель), ид,
                                поз, размер, ч, cast(ткст0)  выборы.ptr, cast(бцел)стиль,
                                ВизОбъект.безопУк(оценщик), имя);
    }

    //---------------------------------------------------------------------

    export цел выделение()
    {
        return wxListBox_GetSelection(вхобъ);
    }
    export проц выделение(цел значение)
    {
        wxListBox_Select(вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export ткст выделениеТекста()
    {
        return cast(ткст) new ВизТкст(wxListBox_GetStringSelection(вхобъ), да);
    }
    export проц выделениеТекста(ткст значение)
    {
        wxListBox_SetStringSelection(вхобъ, значение, да);
    }

    //---------------------------------------------------------------------

    export проц устВыделение(цел ч, бул селект)
    {
        wxListBox_SetSelection(вхобъ, ч, селект);
    }

    export проц устВыделение(ткст элт, бул селект)
    {
        wxListBox_SetStringSelection(вхобъ, элт, селект);
    }

    //---------------------------------------------------------------------

    export проц очисть()
    {
        wxListBox_Clear(вхобъ);
    }

    //---------------------------------------------------------------------

    export ткст дайТкст(цел ч)
    {
        return cast(ткст) new ВизТкст(wxListBox_GetSingleString(вхобъ, ч), да);
    }

    export проц устТкст(цел ч, ткст стр)
    {
        wxListBox_SetSingleString(вхобъ, ч, стр);
    }

    //---------------------------------------------------------------------

    export проц добавь(ткст элт)
    {
        wxListBox_Append(вхобъ, элт);
    }

    export проц добавь(ткст элт, ДанныеКлиента данные)
    {
        wxListBox_AppendClientData(вхобъ, элт, ВизОбъект.безопУк(данные));
    }

    //---------------------------------------------------------------------

    export проц удали(цел ч)
    {
        wxListBox_Delete(вхобъ, ч);
    }

    //---------------------------------------------------------------------

    export проц вставь(ткст элт, цел поз)
    {
        wxListBox_InsertText(вхобъ, элт, поз);
    }

    export проц вставь(ткст элт, цел поз, ДанныеКлиента данные)
    {
        wxListBox_InsertTextData(вхобъ, элт, поз, ВизОбъект.безопУк(данные));
    }

    /*export проц вставь(ткст элт, цел поз, ДанныеКлиента данные)
    {
    wxListBox_InsertTextClientData(вхобъ, элт, поз, ВизОбъект.безопУк(данные));
    }*/

    //---------------------------------------------------------------------

    export проц вставьЭлементы(ткст[] элты, цел поз)
    {
        wxListBox_InsertItems(вхобъ, элты.length, cast(ткст0)  элты.ptr, поз);
    }

    //---------------------------------------------------------------------

    export проц установи(ткст[] элты, ДанныеКлиента данные)
    {
        wxListBox_Set(вхобъ, элты.length, cast(ткст0)  элты.ptr, ВизОбъект.безопУк(данные));
    }

    export проц установи(ткст[] элты)
    {
        wxListBox_Set(вхобъ, элты.length, cast(ткст0)  элты.ptr, ВизОбъект.безопУк(пусто));
    }

    //---------------------------------------------------------------------

    export бул выделен(цел ч)
    {
        return wxListBox_Selected(вхобъ, ч);
    }

    //---------------------------------------------------------------------

    export бул сортирован()
    {
        return wxListBox_IsSorted(вхобъ);
    }

    //---------------------------------------------------------------------

    export бул соМножественнымВыделением()
    {
        return wxListBox_HasMultipleSelection(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц деселектируй(цел ч)
    {
        wxListBox_Deselect(вхобъ, ч);
    }

    export проц деселектируйВсе(цел элтОставляемыйВыделенным)
    {
        wxListBox_DeselectAll(вхобъ, элтОставляемыйВыделенным);
    }

    //---------------------------------------------------------------------

    export цел[] выделения()
    {
        return (new ЦелМассив(wxListBox_GetSelections(вхобъ),да)).вМассив();
    }

    //---------------------------------------------------------------------

    export проц устПервЭлт(цел ч)
    {
        wxListBox_SetFirstItem(вхобъ, ч);
    }

    export проц устПервЭлт(ткст т)
    {
        wxListBox_SetFirstItemText(вхобъ, т);
    }

    //---------------------------------------------------------------------

    export проц команда(Событие соб)
    {
        wxListBox_Command(вхобъ, ВизОбъект.безопУк(соб));
    }

    //---------------------------------------------------------------------

    export цел счёт()
    {
        return wxListBox_GetCount(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц Select_Add(ДатчикСобытий значение)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЛИСТБОКС_ВЫБРАН, ид, значение, this);
    }
    export проц Select_Remove(ДатчикСобытий значение)
    {
        удалиОбработчик(значение, this);
    }

    export проц добавьДНажатие(ДатчикСобытий значение)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЛИСТБОКС_ДВАЖДЫ_НАЖАТ, ид, значение, this);
    }
    export проц удалиДНажатие(ДатчикСобытий значение)
    {
        удалиОбработчик(значение, this);
    }
}

//---------------------------------------------------------------------

//! \cond EXTERN
extern (C) ЦелУкз wxCheckListBox_ctor1();
extern (C) ЦелУкз wxCheckListBox_ctor2(ЦелУкз родитель,
        цел ид,
        inout Точка поз,
        inout Размер размер,
        цел члоСтр,
        ткст0 выборы,
        бцел стиль,
        ЦелУкз оценщик,
        ткст имя);
extern (C) бул wxCheckListBox_IsChecked(ЦелУкз сам, цел индекс);
extern (C) проц wxCheckListBox_Check(ЦелУкз сам, цел индекс, бул чекать);
extern (C) цел wxCheckListBox_GetItemHeight(ЦелУкз сам);
//! \endcond

export class ЧекЛистБокс : ЛистБокс
{
    const ткст СтрИмениЛистБокса = "listBox";

    //---------------------------------------------------------------------

    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    export this()
    {
        super(wxCheckListBox_ctor1());
    }

    export this(Окно родитель, цел ид, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ, ткст[] выборы = пусто, цел стиль = 0, Оценщик оценщик = пусто, ткст имя = СтрИмениЛистБокса)
    {
        super(wxCheckListBox_ctor2(ВизОбъект.безопУк(родитель), ид, поз, размер, выборы.length, cast(ткст0) выборы.ptr, cast(бцел)стиль, ВизОбъект.безопУк(оценщик), имя));
    }

    //---------------------------------------------------------------------
    // ctors with сам created ид

    export this(Окно родитель, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ, ткст[] выборы = пусто, цел стиль = 0, Оценщик оценщик = пусто, ткст имя = СтрИмениЛистБокса)
    {
        this(родитель, Окно.уникИд, поз, размер, выборы, стиль, оценщик, имя);
    }

    //--------------------------------------------------------------------

    export бул отмечен(цел индекс)
    {
        return wxCheckListBox_IsChecked(вхобъ, индекс);
    }

    //---------------------------------------------------------------------

    export проц отметь(цел индекс)
    {
        отметь(индекс, да);
    }

    export проц отметь(цел индекс, бул чекать)
    {
        wxCheckListBox_Check(вхобъ, индекс, чекать);
    }

    //---------------------------------------------------------------------

    version(__WXMAC__) {} else
        export цел высотаЭлта()
    {
        return wxCheckListBox_GetItemHeight(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц Checked_Add(ДатчикСобытий значение)
    {
        добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_ЛИСТБОКС_ТОГГЛ, ид, значение, this);
    }
    export проц Checked_Remove(ДатчикСобытий значение)
    {
        удалиОбработчик(значение, this);
    }
}
