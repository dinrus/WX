module wx.Menu;
public import wx.common;
public import wx.Defs;
public import wx.Window;
public import wx.MenuItem;
public import wx.MenuBar;

//! \cond EXTERN
extern (C) ЦелУкз wxMenuBase_ctor1(ткст титул, бцел стиль);
extern (C) ЦелУкз wxMenuBase_ctor2(бцел стиль);

extern (C) ЦелУкз wxMenuBase_Append(ЦелУкз сам, цел ид, ткст элт, ткст справка, ПВидЭлта вид);
extern (C) ЦелУкз wxMenuBase_AppendSubMenu(ЦелУкз сам, цел ид, ткст элт, ЦелУкз подМеню, ткст справка);
extern (C) ЦелУкз wxMenuBase_AppendItem(ЦелУкз сам, ЦелУкз элт);
extern (C) ЦелУкз wxMenuBase_AppendSeparator(ЦелУкз сам);
extern (C) ЦелУкз wxMenuBase_AppendCheckItem(ЦелУкз сам, цел идЭлта, ткст текст, ткст справка);
extern (C) ЦелУкз wxMenuBase_AppendRadioItem(ЦелУкз сам, цел идЭлта, ткст текст, ткст справка);
extern (C) цел    wxMenuBase_GetMenuItemCount(ЦелУкз сам);
extern (C) ЦелУкз wxMenuBase_GetMenuItem(ЦелУкз сам, цел индекс);
extern (C) проц   wxMenuBase_Break(ЦелУкз сам);

extern (C) ЦелУкз wxMenuBase_Insert(ЦелУкз сам, цел поз, ЦелУкз элт);
extern (C) ЦелУкз wxMenuBase_Insert2(ЦелУкз сам, цел поз, цел идЭлта, ткст текст, ткст справка, ПВидЭлта вид);
extern (C) ЦелУкз wxMenuBase_InsertSeparator(ЦелУкз сам, цел поз);
extern (C) ЦелУкз wxMenuBase_InsertCheckItem(ЦелУкз сам, цел поз, цел идЭлта, ткст текст, ткст справка);
extern (C) ЦелУкз wxMenuBase_InsertRadioItem(ЦелУкз сам, цел поз, цел идЭлта, ткст текст, ткст справка);
extern (C) ЦелУкз wxMenuBase_InsertSubMenu(ЦелУкз сам, цел поз, цел идЭлта, ткст текст, ЦелУкз подменю, ткст справка);

extern (C) ЦелУкз wxMenuBase_Prepend(ЦелУкз сам, ЦелУкз элт);
extern (C) ЦелУкз wxMenuBase_Prepend2(ЦелУкз сам, цел идЭлта, ткст текст, ткст справка, ПВидЭлта вид);
extern (C) ЦелУкз wxMenuBase_PrependSeparator(ЦелУкз сам);
extern (C) ЦелУкз wxMenuBase_PrependCheckItem(ЦелУкз сам, цел идЭлта, ткст текст, ткст справка);
extern (C) ЦелУкз wxMenuBase_PrependRadioItem(ЦелУкз сам, цел идЭлта, ткст текст, ткст справка);
extern (C) ЦелУкз wxMenuBase_PrependSubMenu(ЦелУкз сам, цел идЭлта, ткст текст, ЦелУкз подменю, ткст справка);

extern (C) ЦелУкз wxMenuBase_Remove(ЦелУкз сам, цел идЭлта);
extern (C) ЦелУкз wxMenuBase_Remove2(ЦелУкз сам, ЦелУкз элт);

extern (C) бул   wxMenuBase_Delete(ЦелУкз сам, цел идЭлта);
extern (C) бул   wxMenuBase_Delete2(ЦелУкз сам, ЦелУкз элт);

extern (C) бул   wxMenuBase_Destroy(ЦелУкз сам, цел идЭлта);
extern (C) бул   wxMenuBase_Destroy2(ЦелУкз сам, ЦелУкз элт);

extern (C) цел    wxMenuBase_FindItem(ЦелУкз сам, ткст элт);
extern (C) ЦелУкз wxMenuBase_FindItem2(ЦелУкз сам, цел идЭлта, inout ЦелУкз меню);
extern (C) ЦелУкз wxMenuBase_FindItemByPosition(ЦелУкз сам, цел позиция);

extern (C) проц   wxMenuBase_Enable(ЦелУкз сам, цел идЭлта, бул вкл);
extern (C) бул   wxMenuBase_IsEnabled(ЦелУкз сам, цел идЭлта);

extern (C) проц   wxMenuBase_Check(ЦелУкз сам, цел ид, бул чекать);
extern (C) бул   wxMenuBase_IsChecked(ЦелУкз сам, цел идЭлта);

extern (C) проц   wxMenuBase_SetLabel(ЦелУкз сам, цел идЭлта, ткст ярлык);
extern (C) ЦелУкз wxMenuBase_GetLabel(ЦелУкз сам, цел идЭлта);

extern (C) проц   wxMenuBase_SetHelpString(ЦелУкз сам, цел идЭлта, ткст ткстСправки);
extern (C) ЦелУкз wxMenuBase_GetHelpString(ЦелУкз сам, цел идЭлта);

extern (C) проц   wxMenuBase_SetTitle(ЦелУкз сам, ткст титул);
extern (C) ЦелУкз wxMenuBase_GetTitle(ЦелУкз сам);

extern (C) проц   wxMenuBase_SetInvokingWindow(ЦелУкз сам, ЦелУкз ок);
extern (C) ЦелУкз wxMenuBase_GetInvokingWindow(ЦелУкз сам);

extern (C) бцел   wxMenuBase_GetStyle(ЦелУкз сам);

extern (C) проц   wxMenuBase_SetEventHandler(ЦелУкз сам, ЦелУкз обработчик);
extern (C) ЦелУкз wxMenuBase_GetEventHandler(ЦелУкз сам);

extern (C) проц   wxMenuBase_UpdateUI(ЦелУкз сам, ЦелУкз исток);

extern (C) ЦелУкз wxMenuBase_GetMenuBar(ЦелУкз сам);

extern (C) бул   wxMenuBase_IsAttached(ЦелУкз сам);

extern (C) проц   wxMenuBase_SetParent(ЦелУкз сам, ЦелУкз родитель);
extern (C) ЦелУкз wxMenuBase_GetParent(ЦелУкз сам);

extern (C) ЦелУкз wxMenuBase_FindChildItem(ЦелУкз сам, цел идЭлта, out цел поз);
extern (C) ЦелУкз wxMenuBase_FindChildItem2(ЦелУкз сам, цел идЭлта);
extern (C) бул   wxMenuBase_SendEvent(ЦелУкз сам, цел идЭлта, цел хотмеченный);
//! \endcond

export class ОсноваМеню : ОбработчикСоб
{
    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    export this(цел стиль = 0)
    {
        this(wxMenuBase_ctor2(cast(бцел)стиль));
    }

    export this(ткст титул, цел стиль = 0)
    {
        this(wxMenuBase_ctor1(титул, cast(бцел)стиль));
    }

    //---------------------------------------------------------------------

    export ЭлтМеню добавь(цел ид, ткст элт)
    {
        return this.добавь(ид, элт, "");
    }

    export ЭлтМеню добавь(цел ид, ткст элт, ткст справка)
    {
        return добавь(ид, элт, справка, ПВидЭлта.Нормальный);
    }

    export ЭлтМеню добавь(цел ид, ткст элт, ткст справка, ПВидЭлта вид)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Append(вхобъ, ид, элт, справка, вид), &ЭлтМеню.Нов2);
    }

    export ЭлтМеню добавь(цел ид, ткст элт, Меню подМеню)
    {
        return добавь(ид, элт, подМеню, "");
    }

    export ЭлтМеню добавь(цел ид, ткст элт, Меню подМеню, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_AppendSubMenu(вхобъ, ид, элт, ВизОбъект.безопУк(подМеню), справка), &ЭлтМеню.Нов2);
    }

    export ЭлтМеню добавь(ЭлтМеню элт)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_AppendItem(вхобъ, ВизОбъект.безопУк(элт)), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню добавьЧекЭлт(цел ид, ткст элт)
    {
        return добавьЧекЭлт(ид, элт, "");
    }

    export ЭлтМеню добавьЧекЭлт(цел ид, ткст элт, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_AppendCheckItem(вхобъ, ид, элт, справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню добавьРазделитель()
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_AppendSeparator(вхобъ), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню добавьРадиоЭлт(цел идЭлта, ткст текст)
    {
        return добавьРадиоЭлт(идЭлта, текст, "");
    }

    export ЭлтМеню добавьРадиоЭлт(цел идЭлта, ткст текст, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_AppendRadioItem(вхобъ, идЭлта, текст, справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export проц отметь(цел ид, бул чекать)
    {
        wxMenuBase_Check(вхобъ, ид, чекать);
    }

    //---------------------------------------------------------------------

    export цел дайСчётЭлтовМеню()
    {
        return wxMenuBase_GetMenuItemCount(вхобъ);
    }

    export ЭлтМеню дайЭлтМеню(цел индекс)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_GetMenuItem(вхобъ, индекс), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export  проц брейк()
    {
        wxMenuBase_Break(вхобъ);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню вставь(цел поз, ЭлтМеню элт)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Insert(вхобъ, поз, ВизОбъект.безопУк(элт)), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню вставь(цел поз, цел идЭлта, ткст текст)
    {
        return вставь(поз, идЭлта, текст, "", ПВидЭлта.Нормальный);
    }

    export ЭлтМеню вставь(цел поз, цел идЭлта, ткст текст, ткст справка)
    {
        return вставь(поз, идЭлта, текст, справка, ПВидЭлта.Нормальный);
    }

    export ЭлтМеню вставь(цел поз, цел идЭлта, ткст текст, ткст справка, ПВидЭлта вид)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Insert2(вхобъ, поз, идЭлта, текст, справка, вид), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню вставьРазделитель(цел поз)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_InsertSeparator(вхобъ, поз), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню вставьЧекЭлт(цел поз, цел идЭлта, ткст текст)
    {
        return вставьЧекЭлт(поз, идЭлта, текст, "");
    }

    export ЭлтМеню вставьЧекЭлт(цел поз, цел идЭлта, ткст текст, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_InsertCheckItem(вхобъ, поз, идЭлта, текст, справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню вставьРадиоЭлт(цел поз, цел идЭлта, ткст текст)
    {
        return вставьЧекЭлт(поз, идЭлта, текст, "");
    }

    export ЭлтМеню вставьРадиоЭлт(цел поз, цел идЭлта, ткст текст, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_InsertRadioItem(вхобъ, поз, идЭлта, текст, справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню вставь(цел поз, цел идЭлта, ткст текст, Меню подменю)
    {
        return вставь(поз, идЭлта, текст, подменю, "");
    }

    export ЭлтМеню вставь(цел поз, цел идЭлта, ткст текст, Меню подменю, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_InsertSubMenu(вхобъ, поз, идЭлта, текст, ВизОбъект.безопУк(подменю), справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню подставь(ЭлтМеню элт)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Prepend(вхобъ, ВизОбъект.безопУк(элт)), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню подставь(цел идЭлта, ткст текст)
    {
        return подставь(идЭлта, текст, "", ПВидЭлта.Нормальный);
    }

    export ЭлтМеню подставь(цел идЭлта, ткст текст, ткст справка)
    {
        return подставь(идЭлта, текст, справка, ПВидЭлта.Нормальный);
    }

    export ЭлтМеню подставь(цел идЭлта, ткст текст, ткст справка, ПВидЭлта вид)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Prepend2(вхобъ, идЭлта, текст, справка, вид), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню подставьРазделитель()
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_PrependSeparator(вхобъ));
    }

    //---------------------------------------------------------------------

    export ЭлтМеню подставьЧекЭлт(цел идЭлта, ткст текст)
    {
        return подставьЧекЭлт(идЭлта, текст, "");
    }

    export ЭлтМеню подставьЧекЭлт(цел идЭлта, ткст текст, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_PrependCheckItem(вхобъ, идЭлта, текст, справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню подставьРадиоЭлт(цел идЭлта, ткст текст)
    {
        return подставьРадиоЭлт(идЭлта, текст, "");
    }

    export ЭлтМеню подставьРадиоЭлт(цел идЭлта, ткст текст, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_PrependRadioItem(вхобъ, идЭлта, текст, справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню подставь(цел идЭлта, ткст текст, Меню подменю)
    {
        return подставь(идЭлта, текст, подменю, "");
    }

    export ЭлтМеню подставь(цел идЭлта, ткст текст, Меню подменю, ткст справка)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_PrependSubMenu(вхобъ, идЭлта, текст, ВизОбъект.безопУк(подменю), справка), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню удали(цел идЭлта)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Remove(вхобъ, идЭлта), &ЭлтМеню.Нов2);
    }

    export ЭлтМеню удали(ЭлтМеню элт)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_Remove2(вхобъ, ВизОбъект.безопУк(элт)), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export бул удали2(цел идЭлта)
    {
        return wxMenuBase_Delete(вхобъ, идЭлта);
    }

    export бул удали2(ЭлтМеню элт)
    {
        return wxMenuBase_Delete2(вхобъ, ВизОбъект.безопУк(элт));
    }

    //---------------------------------------------------------------------

    export бул разрушь(цел идЭлта)
    {
        return wxMenuBase_Destroy(вхобъ, идЭлта);
    }

    export бул разрушь(ЭлтМеню элт)
    {
        return wxMenuBase_Destroy2(вхобъ, ВизОбъект.безопУк(элт));
    }

    //---------------------------------------------------------------------

    export  цел найдиЭлт(ткст элт)
    {
        return wxMenuBase_FindItem(вхобъ, элт);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню найдиЭлт(цел идЭлта)
    {
        Меню menuRef = пусто;
        return найдиЭлт(идЭлта, menuRef);
    }

    export ЭлтМеню найдиЭлт(цел идЭлта, inout Меню меню)
    {
        ЦелУкз menuRef = ЦелУкз.init;
        if (меню)
        {
            menuRef = ВизОбъект.безопУк(меню);
        }
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_FindItem2(вхобъ, идЭлта, menuRef), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export ЭлтМеню найдиЭлтПоПозиции(цел позиция)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_FindItemByPosition(вхобъ, позиция), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export проц включи(цел идЭлта, бул вкл)
    {
        wxMenuBase_Enable(вхобъ, идЭлта, вкл);
    }

    export бул активирован(цел идЭлта)
    {
        return wxMenuBase_IsEnabled(вхобъ, идЭлта);
    }

    //---------------------------------------------------------------------

    export бул отмечен(цел идЭлта)
    {
        return wxMenuBase_IsChecked(вхобъ, идЭлта);
    }

    //---------------------------------------------------------------------

    export проц устЯрлык(цел идЭлта, ткст ярлык)
    {
        wxMenuBase_SetLabel(вхобъ, идЭлта, ярлык);
    }

    export ткст дайЯрлык(цел идЭлта)
    {
        return cast(ткст) new ВизТкст(wxMenuBase_GetLabel(вхобъ, идЭлта), да);
    }

    //---------------------------------------------------------------------

    export проц устТкстСправки(цел идЭлта, ткст ткстСправки)
    {
        wxMenuBase_SetHelpString(вхобъ, идЭлта, ткстСправки);
    }

    export ткст дайТкстСправки(цел идЭлта)
    {
        return cast(ткст) new ВизТкст(wxMenuBase_GetHelpString(вхобъ, идЭлта), да);
    }

    //---------------------------------------------------------------------

    export ткст титул()
    {
        return cast(ткст) new ВизТкст(wxMenuBase_GetTitle(вхобъ), да);
    }
    export проц титул(ткст значение)
    {
        wxMenuBase_SetTitle(вхобъ, значение);
    }

    //---------------------------------------------------------------------

    export ОбработчикСоб обработчикСобытий()
    {
        //	return cast(ОбработчикСоб)найдиОбъект(wxMenuBase_GetEventHandler(вхобъ), &ОбработчикСоб.Нов);
        ЦелУкз ptr = wxMenuBase_GetEventHandler(вхобъ);
        ВизОбъект o = найдиОбъект(ptr);
        if (o) return cast(ОбработчикСоб)o;
        else return new ОбработчикСоб(ptr);
    }
    export проц обработчикСобытий(ОбработчикСоб значение)
    {
        wxMenuBase_SetEventHandler(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export Окно вызывающееОкно()
    {
        return cast(Окно)найдиОбъект(wxMenuBase_GetInvokingWindow(вхобъ), &Окно.Нов);
    }
    export проц вызывающееОкно(Окно значение)
    {
        wxMenuBase_SetInvokingWindow(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export цел стиль()
    {
        return cast(цел)wxMenuBase_GetStyle(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц обновиИП()
    {
        обновиИП(пусто);
    }

    export проц обновиИП(ОбработчикСоб исток)
    {
        wxMenuBase_UpdateUI(вхобъ, ВизОбъект.безопУк(исток));
    }

    //---------------------------------------------------------------------

    export МенюБар менюБар()
    {
        return cast(МенюБар)найдиОбъект(wxMenuBase_GetMenuBar(вхобъ), &МенюБар.Нов);
    }

    //---------------------------------------------------------------------

    export бул прикреплен()
    {
        return wxMenuBase_IsAttached(вхобъ);
    }

    //---------------------------------------------------------------------

    export Меню родитель()
    {
        return cast(Меню)найдиОбъект(wxMenuBase_GetParent(вхобъ), &Меню.Нов);
    }
    export проц родитель(Меню значение)
    {
        wxMenuBase_SetParent(вхобъ, ВизОбъект.безопУк(значение));
    }

    //---------------------------------------------------------------------

    export ЭлтМеню найдиЭлтОтпрыск(цел идЭлта)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_FindChildItem2(вхобъ, идЭлта), &ЭлтМеню.Нов2);
    }

    export ЭлтМеню найдиЭлтОтпрыск(цел идЭлта, out цел поз)
    {
        return cast(ЭлтМеню)найдиОбъект(wxMenuBase_FindChildItem(вхобъ, идЭлта, поз), &ЭлтМеню.Нов2);
    }

    //---------------------------------------------------------------------

    export бул шлиСобытие(цел идЭлта)
    {
        return шлиСобытие(идЭлта, -1);
    }

    export бул шлиСобытие(цел идЭлта, цел хотмеченный)
    {
        return wxMenuBase_SendEvent(вхобъ, идЭлта, хотмеченный);
    }
}

//---------------------------------------------------------------------
// helper struct, stores added EventListeners...

export class ДатчикМеню
{
    public ДатчикСобытий датчик;
    public ВизОбъект владелец;
    public цел ид;

    export this( цел ид, ДатчикСобытий датчик, ВизОбъект владелец )
    {
        this.датчик = датчик;
        this.владелец = владелец;
        this.ид = ид;
    }
}

//---------------------------------------------------------------------

//! \cond EXTERN
extern (C) ЦелУкз wxMenu_ctor(ткст титул, бцел стиль);
extern (C) ЦелУкз wxMenu_ctor2(бцел стиль);
//! \endcond

//---------------------------------------------------------------------

export class Меню : ОсноваМеню
{
    public ДатчикМеню[] датчикиСобытий;

    // InvokingWindow does not work on Windows, so we
    // need this...
    private Окно родитель = пусто;

    // if events were connected with Рамка.МенюБар or Окно.ВсплывающееМеню
    // that means with подключиСобытия(), we have a Invoking Окно and can добавить
    // the событие directly до the ОбработчикСобытий
    private бул событияПодключены = нет;

    //---------------------------------------------------------------------

    export this()
    {
        this(0);
    }

    export this(цел стиль)
    {
        this(wxMenu_ctor2(cast(бцел)стиль));
    }

    export this(ткст титул)
    {
        this(титул, 0);
    }

    export this(ткст титул, цел стиль)
    {
        this(wxMenu_ctor(титул, cast(бцел)стиль));
    }

    export this(ЦелУкз вхобъ)
    {
        super(вхобъ);
    }

    export static ВизОбъект Нов(ЦелУкз вхобъ)
    {
        return new Меню(вхобъ);
    }

    //---------------------------------------------------------------------

    export проц добавьСобытие(цел inId, ДатчикСобытий el, ВизОбъект владелец)
    {
        // This is the only way of handling меню selection events (maybe there is an другой solution)
        // But for now we have до добавить the ДатчикСобытий до the ОбработчикСобытий of the invoking окно,
        // другойwise nothing happens.
        // As цел as we do not have an invoking окно, который means, that for example the
        // МенюБар of this Меню isn't connected до a Рамка, the ДатчикСобытий gets only
        // added до the СписокМассивов, другойwise it gets directly added до the ОбработчикСобытий of
        // the invoking окно. When Рамка.МенюБар is set, it will call подключиСобытия()
        // for each Меню ; МенюБар
        датчикиСобытий ~=  new ДатчикМеню( inId, el, владелец );

        if ( событияПодключены )
            родитель.добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_МЕНЮ_ВЫБРАНО, inId, el, владелец);
    }

    //---------------------------------------------------------------------
    // подключиСобытия gets only called от Окно and Рамка

    export проц подключиСобытия(Окно родитель)
    {
        this.родитель = родитель;

        if ( датчикиСобытий.length > 0 )
        {
            foreach( ДатчикМеню ml ; датчикиСобытий )
            {
                родитель.добавьДатчикКоманд(Событие.Тип.СОБ_КОМАНДА_МЕНЮ_ВЫБРАНО, ml.ид, ml.датчик, ml.владелец);
            }
        }

        событияПодключены = да;
    }

    //---------------------------------------------------------------------

    // This is for faster coding ;) and closes request on SourceForge ;))))
    // WL stands for with датчик
    export ЭлтМеню добавьСС(цел ид, ткст элт, ДатчикСобытий датчик)
    {
        ЭлтМеню времэлт = подставь(ид, элт, "");

        добавьСобытие( ид, датчик, времэлт );

        return времэлт;
    }

    export ЭлтМеню добавьСС(цел ид, ткст элт, ткст справка, ДатчикСобытий датчик)
    {
        ЭлтМеню времэлт = подставь(ид, элт, справка, ПВидЭлта.Нормальный);

        добавьСобытие( ид, датчик, времэлт );

        return времэлт;
    }

    export ЭлтМеню добавьСС(цел ид, ткст элт, ткст справка, ПВидЭлта вид, ДатчикСобытий датчик)
    {
        ЭлтМеню времэлт = подставь(ид, элт, справка, вид);

        добавьСобытие( ид, датчик, времэлт );

        return времэлт;
    }

    export ЭлтМеню добавьСС(цел ид, ткст элт, Меню подМеню, ДатчикСобытий датчик)
    {
        ЭлтМеню времэлт = подставь(ид, элт, подМеню, "");

        добавьСобытие( ид, датчик, времэлт );

        return времэлт;
    }

    export ЭлтМеню добавьСС(цел ид, ткст элт, Меню подМеню, ткст справка, ДатчикСобытий датчик)
    {
        ЭлтМеню времэлт = подставь(ид, элт, подМеню, справка);

        добавьСобытие( ид, датчик, времэлт );

        return времэлт;
    }

    export ЭлтМеню добавьСС(ЭлтМеню элт, ДатчикСобытий датчик)
    {
        ЭлтМеню времэлт = подставь(элт);
        добавьСобытие(элт.ид, датчик, времэлт);
        return времэлт;
    }
}
