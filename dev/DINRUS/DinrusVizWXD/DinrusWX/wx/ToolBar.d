module wx.ToolBar;
public import wx.common;
public import wx.Bitmap;
public import wx.Control;
public import wx.ClientData;

		//! \cond EXTERN
		extern (C) ЦелУкз wxToolBarToolBase_ctor(ЦелУкз тбар, цел идИнстр, ткст ярлык, ЦелУкз бмпНормальн, ЦелУкз бмпОтключен, цел вид, ЦелУкз данныеКлиента, ткст стрКраткСправки, ткст стрДлинСправки);
		extern (C) ЦелУкз wxToolBarToolBase_ctorCtrl(ЦелУкз тбар, ЦелУкз контрол);
		extern (C) цел    wxToolBarToolBase_GetId(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBarToolBase_GetControl(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBarToolBase_GetToolBar(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_IsButton(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_IsControl(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_IsSeparator(ЦелУкз сам);
		extern (C) цел    wxToolBarToolBase_GetStyle(ЦелУкз сам);
		extern (C) цел    wxToolBarToolBase_GetKind(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_IsEnabled(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_IsToggled(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_CanBeToggled(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBarToolBase_GetLabel(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBarToolBase_GetShortHelp(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBarToolBase_GetLongHelp(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBarToolBase_GetClientData(ЦелУкз сам);
		extern (C) бул   wxToolBarToolBase_Enable(ЦелУкз сам, бул вкл);
		extern (C) бул   wxToolBarToolBase_Toggle(ЦелУкз сам, бул переключить);
		extern (C) бул   wxToolBarToolBase_SetToggle(ЦелУкз сам, бул переключить);
		extern (C) бул   wxToolBarToolBase_SetShortHelp(ЦелУкз сам, ткст справка);
		extern (C) бул   wxToolBarToolBase_SetLongHelp(ЦелУкз сам, ткст справка);
		extern (C) проц   wxToolBarToolBase_Toggle(ЦелУкз сам);
		extern (C) проц   wxToolBarToolBase_SetNormalBitmap(ЦелУкз сам, ЦелУкз бмп);
		extern (C) проц   wxToolBarToolBase_SetDisabledBitmap(ЦелУкз сам, ЦелУкз бмп);
		extern (C) проц   wxToolBarToolBase_SetLabel(ЦелУкз сам, ткст ярлык);
		extern (C) проц   wxToolBarToolBase_SetClientData(ЦелУкз сам, ЦелУкз данныеКлиента);
		extern (C) проц   wxToolBarToolBase_Detach(ЦелУкз сам);
		extern (C) проц   wxToolBarToolBase_Attach(ЦелУкз сам, ЦелУкз тбар);
		//! \endcond

       //---------------------------------------------------------------------

	export class ИнструментТулбара : ВизОбъект
	{
        export this(ЦелУкз вхобъ)
            { super(вхобъ); }

        export this(Тулбар тбар = пусто, цел идИнстр = СЕПАРАТОР, ткст ярлык = "", Битмап бмпНормальн = Битмап.НуллБитмап, Битмап бмпОтключен = Битмап.НуллБитмап, ПВидЭлта вид = ПВидЭлта.Нормальный, ДанныеКлиента данныеКлиента = пусто, ткст стрКраткСправки = "", ткст стрДлинСправки = "")
            { this(wxToolBarToolBase_ctor(ВизОбъект.безопУк(тбар), идИнстр, ярлык, ВизОбъект.безопУк(бмпНормальн), ВизОбъект.безопУк(бмпОтключен), cast(цел)вид, ВизОбъект.безопУк(данныеКлиента), стрКраткСправки, стрДлинСправки)); }

        export this(Тулбар тбар, Контрол контрол)
            { this(wxToolBarToolBase_ctorCtrl(ВизОбъект.безопУк(тбар), ВизОбъект.безопУк(контрол))); }


	export static ВизОбъект Нов(ЦелУкз ptr) { return new ИнструментТулбара(ptr); }
        //---------------------------------------------------------------------

		export цел ид() {return wxToolBarToolBase_GetId(вхобъ); }

		export Контрол контрол() { return cast(Контрол)найдиОбъект(wxToolBarToolBase_GetControl(вхобъ)); }

		export Тулбар тулБар() { return cast(Тулбар)найдиОбъект(wxToolBarToolBase_GetToolBar(вхобъ), &Тулбар.Нов); }

        //---------------------------------------------------------------------

		export бул кнопка_ли() { return wxToolBarToolBase_IsButton(вхобъ); }

		export бул контрол_ли() { return wxToolBarToolBase_IsControl(вхобъ); }

		export бул сепаратор_ли() { return wxToolBarToolBase_IsSeparator(вхобъ); }

        //---------------------------------------------------------------------

		export цел стиль() { return wxToolBarToolBase_GetStyle(вхобъ); }

		export ПВидЭлта вид() { return cast(ПВидЭлта)wxToolBarToolBase_GetKind(вхобъ); }

        //---------------------------------------------------------------------

		export бул можетПереключаться()
        {
            return wxToolBarToolBase_CanBeToggled(вхобъ);
        }

        //---------------------------------------------------------------------

		export ткст ярлык() { return cast(ткст) new ВизТкст(wxToolBarToolBase_GetLabel(вхобъ), да); }
		export проц ярлык(ткст значение) { wxToolBarToolBase_SetLabel(вхобъ, значение); }

		export ткст краткСправка() { return cast(ткст) new ВизТкст(wxToolBarToolBase_GetShortHelp(вхобъ), да); }
		export проц краткСправка(ткст значение) { wxToolBarToolBase_SetShortHelp(вхобъ, значение); }

		export ткст длинСправка() { return cast(ткст) new ВизТкст(wxToolBarToolBase_GetLongHelp(вхобъ), да); }
		export проц длинСправка(ткст значение) { wxToolBarToolBase_SetLongHelp(вхобъ, значение); }

        //---------------------------------------------------------------------

		export ДанныеКлиента данныеКлиента() { return cast(ДанныеКлиента)найдиОбъект(wxToolBarToolBase_GetClientData(вхобъ)); }
		export проц данныеКлиента(ДанныеКлиента значение) { wxToolBarToolBase_SetClientData(вхобъ, ВизОбъект.безопУк(значение)); }

        //---------------------------------------------------------------------

		export проц активен(бул значение) { wxToolBarToolBase_Enable(вхобъ, значение); }
		export бул активен() {return wxToolBarToolBase_IsEnabled(вхобъ); }

		export проц переключен(бул значение) { wxToolBarToolBase_SetToggle(вхобъ, значение); }
		export бул переключен() { return wxToolBarToolBase_IsToggled(вхобъ); }

        //---------------------------------------------------------------------

		export проц нормБитмап(Битмап значение) { wxToolBarToolBase_SetNormalBitmap(вхобъ, ВизОбъект.безопУк(значение)); }

		export проц отклБитмап(Битмап значение) { wxToolBarToolBase_SetDisabledBitmap(вхобъ, ВизОбъект.безопУк(значение)); }

        //---------------------------------------------------------------------

		export проц отторочь()
        {
            wxToolBarToolBase_Detach(вхобъ);
        }

		export проц приторочь(Тулбар тбар)
        {
            wxToolBarToolBase_Attach(вхобъ, ВизОбъект.безопУк(тбар));
        }

        //---------------------------------------------------------------------
	}

		//! \cond EXTERN
		extern (C) ЦелУкз wxToolBar_ctor(ЦелУкз родитель, цел ид, inout Точка поз, inout Размер размер, бцел стиль);
		extern (C) ЦелУкз wxToolBar_AddTool1(ЦелУкз сам, цел идИнстр, ткст ярлык, ЦелУкз битмап, ЦелУкз бмпОтключен, цел вид, ткст кратСправ, ткст длинСправ, ЦелУкз данные);
		extern (C) ЦелУкз wxToolBar_AddTool2(ЦелУкз сам, цел идИнстр, ткст ярлык, ЦелУкз битмап, ткст кратСправ, цел вид);
		extern (C) ЦелУкз wxToolBar_AddCheckTool(ЦелУкз сам, цел идИнстр, ткст ярлык, ЦелУкз битмап, ЦелУкз бмпОтключен, ткст кратСправ, ткст длинСправ, ЦелУкз данные);
		extern (C) ЦелУкз wxToolBar_AddRadioTool(ЦелУкз сам, цел идИнстр, ткст ярлык, ЦелУкз битмап, ЦелУкз бмпОтключен, ткст кратСправ, ткст длинСправ, ЦелУкз данные);
		extern (C) ЦелУкз wxToolBar_AddControl(ЦелУкз сам, ЦелУкз контрол);
		extern (C) ЦелУкз wxToolBar_InsertControl(ЦелУкз сам, цел поз, ЦелУкз контрол);
		extern (C) ЦелУкз wxToolBar_FindControl(ЦелУкз сам, цел идИнстр);
		extern (C) ЦелУкз wxToolBar_AddSeparator(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBar_InsertSeparator(ЦелУкз сам, цел поз);
		extern (C) ЦелУкз wxToolBar_RemoveTool(ЦелУкз сам, цел идИнстр);
		extern (C) бул   wxToolBar_DeleteToolByPos(ЦелУкз сам, цел поз);
		extern (C) бул   wxToolBar_DeleteTool(ЦелУкз сам, цел идИнстр);
		extern (C) проц   wxToolBar_ClearTools(ЦелУкз сам);
		extern (C) бул   wxToolBar_Realize(ЦелУкз сам);
		extern (C) проц   wxToolBar_EnableTool(ЦелУкз сам, цел идИнстр, бул вкл);
		extern (C) проц   wxToolBar_ToggleTool(ЦелУкз сам, цел идИнстр, бул переключить);
		extern (C) ЦелУкз wxToolBar_GetToolClientData(ЦелУкз сам, цел идИнстр);
		extern (C) проц   wxToolBar_SetToolClientData(ЦелУкз сам, цел идИнстр, ЦелУкз данныеКлиента);
		extern (C) бул   wxToolBar_GetToolState(ЦелУкз сам, цел идИнстр);
		extern (C) бул   wxToolBar_GetToolEnabled(ЦелУкз сам, цел идИнстр);
		extern (C) проц   wxToolBar_SetToolShortHelp(ЦелУкз сам, цел идИнстр, ткст ткстСправки);
		extern (C) ЦелУкз wxToolBar_GetToolShortHelp(ЦелУкз сам, цел идИнстр);
		extern (C) проц   wxToolBar_SetToolLongHelp(ЦелУкз сам, цел идИнстр, ткст ткстСправки);
		extern (C) ЦелУкз wxToolBar_GetToolLongHelp(ЦелУкз сам, цел идИнстр);
		extern (C) проц   wxToolBar_SetMargins(ЦелУкз сам, цел x, цел y);
		extern (C) проц   wxToolBar_SetToolPacking(ЦелУкз сам, цел packing);
		extern (C) проц   wxToolBar_SetToolSeparation(ЦелУкз сам, цел separation);
		extern (C) проц   wxToolBar_GetToolMargins(ЦелУкз сам, inout Размер размер);
		extern (C) цел    wxToolBar_GetToolPacking(ЦелУкз сам);
		extern (C) цел    wxToolBar_GetToolSeparation(ЦелУкз сам);
		extern (C) проц   wxToolBar_SetRows(ЦелУкз сам, цел nRows);
		extern (C) проц   wxToolBar_SetMaxRowsCols(ЦелУкз сам, цел ряды, цел клнки);
		extern (C) цел    wxToolBar_GetMaxRows(ЦелУкз сам);
		extern (C) цел    wxToolBar_GetMaxCols(ЦелУкз сам);
		extern (C) проц   wxToolBar_SetToolBitmapSize(ЦелУкз сам, inout Размер размер);
		extern (C) проц   wxToolBar_GetToolBitmapSize(ЦелУкз сам, inout Размер размер);
		extern (C) проц   wxToolBar_GetToolSize(ЦелУкз сам, inout Размер размер);
		extern (C) ЦелУкз wxToolBar_FindToolForPosition(ЦелУкз сам, цел x, цел y);
		extern (C) бул   wxToolBar_IsVertical(ЦелУкз сам);
		extern (C) ЦелУкз wxToolBar_AddTool3(ЦелУкз сам, цел идИнстр, ЦелУкз битмап, ЦелУкз бмпОтключен, бул переключить, ЦелУкз данныеКлиента, ткст стрКраткСправки, ткст стрДлинСправки);
		extern (C) ЦелУкз wxToolBar_AddTool4(ЦелУкз сам, цел идИнстр, ЦелУкз битмап, ткст стрКраткСправки, ткст стрДлинСправки);
		extern (C) ЦелУкз wxToolBar_AddTool5(ЦелУкз сам, цел идИнстр, ЦелУкз битмап, ЦелУкз бмпОтключен, бул переключить, цел xPos, цел yPos, ЦелУкз данныеКлиента, ткст кратСправ, ткст длинСправ);
		extern (C) ЦелУкз wxToolBar_InsertTool(ЦелУкз сам, цел поз, цел идИнстр, ЦелУкз битмап, ЦелУкз бмпОтключен, бул переключить, ЦелУкз данныеКлиента, ткст кратСправ, ткст длинСправ);
		extern (C) бул   wxToolBar_AcceptsFocus(ЦелУкз сам);
		//! \endcond

        //---------------------------------------------------------------------

	export class Тулбар : Контрол
	{
		enum {
			ГОРИЗОНТАЛЬНЫЙ   = ПОриентация.Горизонталь,
			ВЕРТИКАЛЬНЫЙ     = ПОриентация.Вертикаль,
			КНОПКИ3Д    = 0x0010,
			ПЛОСКИЙ         = 0x0020,
			ДОКИРУЕМЫЙ     = 0x0040,
			БЕЗ_ИКОНОК      = 0x0080,
			ТЕКСТ         = 0x0100,
			БЕЗ_ДЕЛИТЕЛЯ    = 0x0200,
			БЕЗ_РАСКЛАДКИ      = 0x0400,
			ГОРИЗ_РАСКЛАДКА  = 0x0800,
			ГОРИЗ_ТЕКСТ    = ГОРИЗ_РАСКЛАДКА | ТЕКСТ
		}

		//---------------------------------------------------------------------

        export this(ЦелУкз вхобъ)
            { super(вхобъ); }

        export this(Окно родитель, цел ид, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ, цел стиль = БЕЗ_БОРДЮРА|ГОРИЗОНТАЛЬНЫЙ)
            { this(wxToolBar_ctor(ВизОбъект.безопУк(родитель), ид, поз, размер, стиль)); }

	//---------------------------------------------------------------------
	// ctors with сам created ид

        export this(Окно родитель, Точка поз = ДЕФПОЗ, Размер размер = ДЕФРАЗМ, цел стиль = БЕЗ_БОРДЮРА|ГОРИЗОНТАЛЬНЫЙ)
	    { this(родитель, Окно.уникИд, поз, размер, стиль);}

        //---------------------------------------------------------------------

        export ИнструментТулбара добавьИнстр(цел идИнстр, ткст ярлык, Битмап битмап)
        {
            return добавьИнстр(идИнстр, ярлык, битмап, "", cast(ПВидЭлта)0);
        }

        export ИнструментТулбара добавьИнстр(цел идИнстр, ткст ярлык, Битмап битмап, Битмап бмпОтключен, ПВидЭлта вид, ткст кратСправ, ткст длинСправ, ДанныеКлиента данныеКлиента)
        {
            return new ИнструментТулбара(wxToolBar_AddTool1(вхобъ, идИнстр, ярлык, ВизОбъект.безопУк(битмап), ВизОбъект.безопУк(бмпОтключен), cast(цел)вид, кратСправ, длинСправ, ВизОбъект.безопУк(данныеКлиента)));
        }

        export ИнструментТулбара добавьИнстр(цел идИнстр, ткст ярлык, Битмап битмап, ткст кратСправ, ПВидЭлта вид = ПВидЭлта.Нормальный)
        {
            return new ИнструментТулбара(wxToolBar_AddTool2(вхобъ, идИнстр, ярлык, ВизОбъект.безопУк(битмап), кратСправ, cast(цел)вид));
        }

        export ИнструментТулбара добавьИнстр(цел идИнстр, Битмап битмап, Битмап бмпОтключен, бул переключить, ДанныеКлиента данныеКлиента, ткст стрКраткСправки, ткст стрДлинСправки)
        {
            return new ИнструментТулбара(wxToolBar_AddTool3(вхобъ, идИнстр, ВизОбъект.безопУк(битмап), ВизОбъект.безопУк(бмпОтключен), переключить, ВизОбъект.безопУк(данныеКлиента), стрКраткСправки, стрДлинСправки));
        }

        export ИнструментТулбара добавьИнстр(цел идИнстр, Битмап битмап, ткст стрКраткСправки)
            { return добавьИнстр(идИнстр, битмап, стрКраткСправки, ""); }
        export ИнструментТулбара добавьИнстр(цел идИнстр, Битмап битмап, ткст стрКраткСправки, ткст стрДлинСправки)
        {
            return new ИнструментТулбара(wxToolBar_AddTool4(вхобъ, идИнстр, ВизОбъект.безопУк(битмап), стрКраткСправки, стрДлинСправки));
        }

        export ИнструментТулбара добавьИнстр(цел идИнстр, Битмап битмап, Битмап бмпОтключен, бул переключить, цел xPos, цел yPos, ДанныеКлиента данныеКлиента, ткст кратСправ, ткст длинСправ)
        {
            return new ИнструментТулбара(wxToolBar_AddTool5(вхобъ, идИнстр, ВизОбъект.безопУк(битмап), ВизОбъект.безопУк(бмпОтключен), переключить, xPos, yPos, ВизОбъект.безопУк(данныеКлиента), кратСправ, длинСправ));
        }

        //---------------------------------------------------------------------

        export ИнструментТулбара вставьИнстр(цел поз, цел идИнстр, Битмап битмап, Битмап бмпОтключен, бул переключить, ДанныеКлиента данныеКлиента, ткст кратСправ, ткст длинСправ)
        {
            return new ИнструментТулбара(wxToolBar_InsertTool(вхобъ, поз, идИнстр, ВизОбъект.безопУк(битмап), ВизОбъект.безопУк(бмпОтключен), переключить, ВизОбъект.безопУк(данныеКлиента), кратСправ, длинСправ));
        }

        //---------------------------------------------------------------------

        export ИнструментТулбара добавьЧекТул(цел идИнстр, ткст ярлык, Битмап битмап, Битмап бмпОтключен, ткст кратСправ, ткст длинСправ)
        {
            return new ИнструментТулбара(wxToolBar_AddCheckTool(вхобъ, идИнстр, ярлык, ВизОбъект.безопУк(битмап), ВизОбъект.безопУк(бмпОтключен), кратСправ, длинСправ, ВизОбъект.безопУк(пусто)));
        }

        export ИнструментТулбара добавьРадиоТул(цел идИнстр, ткст ярлык, Битмап битмап, Битмап бмпОтключен, ткст кратСправ, ткст длинСправ)
        {
            return new ИнструментТулбара(wxToolBar_AddRadioTool(вхобъ, идИнстр, ярлык, ВизОбъект.безопУк(битмап), ВизОбъект.безопУк(бмпОтключен), кратСправ, длинСправ, ВизОбъект.безопУк(пусто)));
        }

        //---------------------------------------------------------------------

        export ИнструментТулбара добавьКонтрол(Контрол ктрл)
        {
            return new ИнструментТулбара(wxToolBar_AddControl(вхобъ, ВизОбъект.безопУк(ктрл)));
        }

        export ИнструментТулбара вставьКонтрол(цел поз, Контрол ктрл)
        {
            return new ИнструментТулбара(wxToolBar_InsertControl(вхобъ, поз, ВизОбъект.безопУк(ктрл)));
        }

        export ИнструментТулбара найдиКонтрол(цел идИнстр)
        {
            return cast(ИнструментТулбара)найдиОбъект(wxToolBar_FindControl(вхобъ, идИнстр), &ИнструментТулбара.Нов);
        }

        //---------------------------------------------------------------------

        export ИнструментТулбара добавьРазделитель()
        {
            return new ИнструментТулбара(wxToolBar_AddSeparator(вхобъ));
        }

        export ИнструментТулбара вставьРазделитель(цел поз)
        {
            return new ИнструментТулбара(wxToolBar_InsertSeparator(вхобъ, поз));
        }

        //---------------------------------------------------------------------

        export ИнструментТулбара убериИнстр(цел идИнстр)
        {
            return cast(ИнструментТулбара)найдиОбъект(wxToolBar_RemoveTool(вхобъ, идИнстр), &ИнструментТулбара.Нов);
        }

        export бул удалиИнстрПоПоз(цел поз)
        {
            return wxToolBar_DeleteToolByPos(вхобъ, поз);
        }

        export бул удалиИнстр(цел идИнстр)
        {
            return wxToolBar_DeleteTool(вхобъ, идИнстр);
        }

        export проц очистьИнстры()
        {
            wxToolBar_ClearTools(вхобъ);
        }

        //---------------------------------------------------------------------

        export бул отпусти()
        {
            return wxToolBar_Realize(вхобъ);
        }

        //---------------------------------------------------------------------

        export проц вклИнстр(цел идИнстр, бул вкл)
        {
            wxToolBar_EnableTool(вхобъ, идИнстр, вкл);
        }

        export проц переключиИнстр(цел идИнстр, бул переключить)
        {
            wxToolBar_ToggleTool(вхобъ, идИнстр, переключить);
        }

        //---------------------------------------------------------------------

        export проц устДанныеКлиентаИнстр(цел идИнстр, ДанныеКлиента данныеКлиента)
        {
            wxToolBar_SetToolClientData(вхобъ, идИнстр, ВизОбъект.безопУк(данныеКлиента));
        }

        export ДанныеКлиента дайДанныеКлиентаИнстр(цел идИнстр)
        {
            return cast(ДанныеКлиента)ВизОбъект.найдиОбъект(wxToolBar_GetToolClientData(вхобъ, идИнстр));
        }

        //---------------------------------------------------------------------

        export бул дайСостояниеИнстр(цел идИнстр)
        {
            return wxToolBar_GetToolState(вхобъ, идИнстр);
        }

        export бул дайВклИнстр(цел идИнстр)
        {
            return wxToolBar_GetToolEnabled(вхобъ, идИнстр);
        }

        //---------------------------------------------------------------------

        export ткст дайКратСправкуИнстр(цел идИнстр)
        {
            return cast(ткст) new ВизТкст(wxToolBar_GetToolShortHelp(вхобъ, идИнстр), да);
        }

        export проц устКратСправкуИнстр(цел идИнстр, ткст ткстСправки)
        {
            wxToolBar_SetToolShortHelp(вхобъ, идИнстр, ткстСправки);
        }

        //---------------------------------------------------------------------

        export ткст дайДлинСправкуИнстр(цел идИнстр)
        {
            return cast(ткст) new ВизТкст(wxToolBar_GetToolLongHelp(вхобъ, идИнстр), да);
        }

        export проц устДлинСправкуИнстр(цел идИнстр, ткст ткстСправки)
        {
            wxToolBar_SetToolLongHelp(вхобъ, идИнстр, ткстСправки);
        }

        //---------------------------------------------------------------------

        export проц устМаржины(цел x, цел y) { wxToolBar_SetMargins(вхобъ, x, y); }

        export Размер маржины()
        {
		Размер размер;
		wxToolBar_GetToolMargins(вхобъ, размер);
		return размер;
	}
        export проц маржины(Размер значение) { wxToolBar_SetMargins(вхобъ, значение.ширь, значение.высь); }

        //---------------------------------------------------------------------

        export цел упаковкаИнстр() { return wxToolBar_GetToolPacking(вхобъ); }
        export проц упаковкаИнстр(цел значение) { wxToolBar_SetToolPacking(вхобъ, значение); }

        //---------------------------------------------------------------------

        export цел разделение() { return wxToolBar_GetToolSeparation(вхобъ); }
        export проц разделение(цел значение) { wxToolBar_SetToolSeparation(вхобъ, значение); }

        //---------------------------------------------------------------------

        export проц ряды(цел значение) { wxToolBar_SetRows(вхобъ, значение); }

        export цел максРядов() { return wxToolBar_GetMaxRows(вхобъ); }

        export цел максКолонок() { return wxToolBar_GetMaxCols(вхобъ); }

        //---------------------------------------------------------------------

        export проц устМаксРядовИКолонок(цел ряды, цел клнки)
        {
            wxToolBar_SetMaxRowsCols(вхобъ, ряды, клнки);
        }

        //---------------------------------------------------------------------

        export Размер размерБитмапаИнстр() {
                Размер размер;
                wxToolBar_GetToolBitmapSize(вхобъ, размер);
                return размер;
            }
        export проц размерБитмапаИнструмента(Размер значение) { wxToolBar_SetToolBitmapSize(вхобъ, значение); }

        //---------------------------------------------------------------------

        export Размер размерИнстр() {
                Размер размер;
                wxToolBar_GetToolSize(вхобъ, размер);
                return размер;
            }

        //---------------------------------------------------------------------

        export ИнструментТулбара найдиИнстрПоПозиции(цел x, цел y)
        {
            return cast(ИнструментТулбара)найдиОбъект(wxToolBar_FindToolForPosition(вхобъ, x, y), &ИнструментТулбара.Нов);
        }

        //---------------------------------------------------------------------

        export бул вертикален() { return wxToolBar_IsVertical(вхобъ); }

        //---------------------------------------------------------------------

        export override бул фокусируем()
        {
            return wxToolBar_AcceptsFocus(вхобъ);
        }

	}

